// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: ecooda/v1/ecooda.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ------------------ LOCATION SERVICE ----------------------------------------------------------------------------------
type LocationType int32

const (
	LocationType_LOCATION_TYPE_UNSPECIFIED LocationType = 0
	LocationType_LOCATION_TYPE_CONTINENT   LocationType = 1
	LocationType_LOCATION_TYPE_COUNTRY     LocationType = 2
	LocationType_LOCATION_TYPE_REGION      LocationType = 3
	LocationType_LOCATION_TYPE_CITY        LocationType = 4
)

// Enum value maps for LocationType.
var (
	LocationType_name = map[int32]string{
		0: "LOCATION_TYPE_UNSPECIFIED",
		1: "LOCATION_TYPE_CONTINENT",
		2: "LOCATION_TYPE_COUNTRY",
		3: "LOCATION_TYPE_REGION",
		4: "LOCATION_TYPE_CITY",
	}
	LocationType_value = map[string]int32{
		"LOCATION_TYPE_UNSPECIFIED": 0,
		"LOCATION_TYPE_CONTINENT":   1,
		"LOCATION_TYPE_COUNTRY":     2,
		"LOCATION_TYPE_REGION":      3,
		"LOCATION_TYPE_CITY":        4,
	}
)

func (x LocationType) Enum() *LocationType {
	p := new(LocationType)
	*p = x
	return p
}

func (x LocationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LocationType) Descriptor() protoreflect.EnumDescriptor {
	return file_ecooda_v1_ecooda_proto_enumTypes[0].Descriptor()
}

func (LocationType) Type() protoreflect.EnumType {
	return &file_ecooda_v1_ecooda_proto_enumTypes[0]
}

func (x LocationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LocationType.Descriptor instead.
func (LocationType) EnumDescriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{0}
}

// ------------------ API META ------------------------------------------------------------------------------------------
type Cursor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Previous int32 `protobuf:"varint,1,opt,name=previous,proto3" json:"previous,omitempty"`
	Current  int32 `protobuf:"varint,2,opt,name=current,proto3" json:"current,omitempty"`
	Next     int32 `protobuf:"varint,3,opt,name=next,proto3" json:"next,omitempty"`
	Count    int32 `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *Cursor) Reset() {
	*x = Cursor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cursor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cursor) ProtoMessage() {}

func (x *Cursor) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cursor.ProtoReflect.Descriptor instead.
func (*Cursor) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{0}
}

func (x *Cursor) GetPrevious() int32 {
	if x != nil {
		return x.Previous
	}
	return 0
}

func (x *Cursor) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *Cursor) GetNext() int32 {
	if x != nil {
		return x.Next
	}
	return 0
}

func (x *Cursor) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type Meta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to OptionalCursor:
	//
	//	*Meta_Cursor
	OptionalCursor isMeta_OptionalCursor `protobuf_oneof:"optional_cursor"`
	// Types that are assignable to OptionalFields:
	//
	//	*Meta_Fields
	OptionalFields isMeta_OptionalFields `protobuf_oneof:"optional_fields"`
}

func (x *Meta) Reset() {
	*x = Meta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Meta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Meta) ProtoMessage() {}

func (x *Meta) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Meta.ProtoReflect.Descriptor instead.
func (*Meta) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{1}
}

func (m *Meta) GetOptionalCursor() isMeta_OptionalCursor {
	if m != nil {
		return m.OptionalCursor
	}
	return nil
}

func (x *Meta) GetCursor() *Cursor {
	if x, ok := x.GetOptionalCursor().(*Meta_Cursor); ok {
		return x.Cursor
	}
	return nil
}

func (m *Meta) GetOptionalFields() isMeta_OptionalFields {
	if m != nil {
		return m.OptionalFields
	}
	return nil
}

func (x *Meta) GetFields() string {
	if x, ok := x.GetOptionalFields().(*Meta_Fields); ok {
		return x.Fields
	}
	return ""
}

type isMeta_OptionalCursor interface {
	isMeta_OptionalCursor()
}

type Meta_Cursor struct {
	Cursor *Cursor `protobuf:"bytes,1,opt,name=cursor,proto3,oneof"`
}

func (*Meta_Cursor) isMeta_OptionalCursor() {}

type isMeta_OptionalFields interface {
	isMeta_OptionalFields()
}

type Meta_Fields struct {
	Fields string `protobuf:"bytes,2,opt,name=fields,proto3,oneof"`
}

func (*Meta_Fields) isMeta_OptionalFields() {}

type Parents struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*Location `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *Parents) Reset() {
	*x = Parents{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Parents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Parents) ProtoMessage() {}

func (x *Parents) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Parents.ProtoReflect.Descriptor instead.
func (*Parents) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{2}
}

func (x *Parents) GetData() []*Location {
	if x != nil {
		return x.Data
	}
	return nil
}

type Location struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Types that are assignable to OptionalName:
	//
	//	*Location_Name
	OptionalName isLocation_OptionalName `protobuf_oneof:"optional_name"`
	// Types that are assignable to OptionalType:
	//
	//	*Location_Type
	OptionalType isLocation_OptionalType `protobuf_oneof:"optional_type"`
	CreatedAt    string                  `protobuf:"bytes,4,opt,name=created_at,proto3" json:"created_at,omitempty"`
	UpdatedAt    string                  `protobuf:"bytes,5,opt,name=updated_at,proto3" json:"updated_at,omitempty"`
	// Types that are assignable to OptionalParents:
	//
	//	*Location_Parents
	OptionalParents isLocation_OptionalParents `protobuf_oneof:"optional_parents"`
}

func (x *Location) Reset() {
	*x = Location{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Location) ProtoMessage() {}

func (x *Location) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Location.ProtoReflect.Descriptor instead.
func (*Location) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{3}
}

func (x *Location) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (m *Location) GetOptionalName() isLocation_OptionalName {
	if m != nil {
		return m.OptionalName
	}
	return nil
}

func (x *Location) GetName() string {
	if x, ok := x.GetOptionalName().(*Location_Name); ok {
		return x.Name
	}
	return ""
}

func (m *Location) GetOptionalType() isLocation_OptionalType {
	if m != nil {
		return m.OptionalType
	}
	return nil
}

func (x *Location) GetType() LocationType {
	if x, ok := x.GetOptionalType().(*Location_Type); ok {
		return x.Type
	}
	return LocationType_LOCATION_TYPE_UNSPECIFIED
}

func (x *Location) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Location) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (m *Location) GetOptionalParents() isLocation_OptionalParents {
	if m != nil {
		return m.OptionalParents
	}
	return nil
}

func (x *Location) GetParents() *Parents {
	if x, ok := x.GetOptionalParents().(*Location_Parents); ok {
		return x.Parents
	}
	return nil
}

type isLocation_OptionalName interface {
	isLocation_OptionalName()
}

type Location_Name struct {
	Name string `protobuf:"bytes,2,opt,name=name,proto3,oneof"`
}

func (*Location_Name) isLocation_OptionalName() {}

type isLocation_OptionalType interface {
	isLocation_OptionalType()
}

type Location_Type struct {
	Type LocationType `protobuf:"varint,3,opt,name=type,proto3,enum=ecooda.v1.LocationType,oneof"`
}

func (*Location_Type) isLocation_OptionalType() {}

type isLocation_OptionalParents interface {
	isLocation_OptionalParents()
}

type Location_Parents struct {
	Parents *Parents `protobuf:"bytes,6,opt,name=parents,proto3,oneof"`
}

func (*Location_Parents) isLocation_OptionalParents() {}

type Locations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *Location `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Locations) Reset() {
	*x = Locations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Locations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Locations) ProtoMessage() {}

func (x *Locations) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Locations.ProtoReflect.Descriptor instead.
func (*Locations) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{4}
}

func (x *Locations) GetData() *Location {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetLocationFromChallengeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Types that are assignable to OptionalFields:
	//
	//	*GetLocationFromChallengeRequest_Fields
	OptionalFields isGetLocationFromChallengeRequest_OptionalFields `protobuf_oneof:"optional_fields"`
}

func (x *GetLocationFromChallengeRequest) Reset() {
	*x = GetLocationFromChallengeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLocationFromChallengeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLocationFromChallengeRequest) ProtoMessage() {}

func (x *GetLocationFromChallengeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLocationFromChallengeRequest.ProtoReflect.Descriptor instead.
func (*GetLocationFromChallengeRequest) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{5}
}

func (x *GetLocationFromChallengeRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (m *GetLocationFromChallengeRequest) GetOptionalFields() isGetLocationFromChallengeRequest_OptionalFields {
	if m != nil {
		return m.OptionalFields
	}
	return nil
}

func (x *GetLocationFromChallengeRequest) GetFields() string {
	if x, ok := x.GetOptionalFields().(*GetLocationFromChallengeRequest_Fields); ok {
		return x.Fields
	}
	return ""
}

type isGetLocationFromChallengeRequest_OptionalFields interface {
	isGetLocationFromChallengeRequest_OptionalFields()
}

type GetLocationFromChallengeRequest_Fields struct {
	Fields string `protobuf:"bytes,2,opt,name=fields,proto3,oneof"`
}

func (*GetLocationFromChallengeRequest_Fields) isGetLocationFromChallengeRequest_OptionalFields() {}

type GetLocationFromChallengeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *Location `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetLocationFromChallengeResponse) Reset() {
	*x = GetLocationFromChallengeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLocationFromChallengeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLocationFromChallengeResponse) ProtoMessage() {}

func (x *GetLocationFromChallengeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLocationFromChallengeResponse.ProtoReflect.Descriptor instead.
func (*GetLocationFromChallengeResponse) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{6}
}

func (x *GetLocationFromChallengeResponse) GetData() *Location {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetLocationCollectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to OptionalFields:
	//
	//	*GetLocationCollectionRequest_Fields
	OptionalFields isGetLocationCollectionRequest_OptionalFields `protobuf_oneof:"optional_fields"`
	// Types that are assignable to OptionalPageSize:
	//
	//	*GetLocationCollectionRequest_PageSize
	OptionalPageSize isGetLocationCollectionRequest_OptionalPageSize `protobuf_oneof:"optional_page_size"`
	// Types that are assignable to OptionalPage:
	//
	//	*GetLocationCollectionRequest_Page
	OptionalPage isGetLocationCollectionRequest_OptionalPage `protobuf_oneof:"optional_page"`
	// Types that are assignable to OptionalSort:
	//
	//	*GetLocationCollectionRequest_Sort
	OptionalSort isGetLocationCollectionRequest_OptionalSort `protobuf_oneof:"optional_sort"`
}

func (x *GetLocationCollectionRequest) Reset() {
	*x = GetLocationCollectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLocationCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLocationCollectionRequest) ProtoMessage() {}

func (x *GetLocationCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLocationCollectionRequest.ProtoReflect.Descriptor instead.
func (*GetLocationCollectionRequest) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{7}
}

func (m *GetLocationCollectionRequest) GetOptionalFields() isGetLocationCollectionRequest_OptionalFields {
	if m != nil {
		return m.OptionalFields
	}
	return nil
}

func (x *GetLocationCollectionRequest) GetFields() string {
	if x, ok := x.GetOptionalFields().(*GetLocationCollectionRequest_Fields); ok {
		return x.Fields
	}
	return ""
}

func (m *GetLocationCollectionRequest) GetOptionalPageSize() isGetLocationCollectionRequest_OptionalPageSize {
	if m != nil {
		return m.OptionalPageSize
	}
	return nil
}

func (x *GetLocationCollectionRequest) GetPageSize() int32 {
	if x, ok := x.GetOptionalPageSize().(*GetLocationCollectionRequest_PageSize); ok {
		return x.PageSize
	}
	return 0
}

func (m *GetLocationCollectionRequest) GetOptionalPage() isGetLocationCollectionRequest_OptionalPage {
	if m != nil {
		return m.OptionalPage
	}
	return nil
}

func (x *GetLocationCollectionRequest) GetPage() int32 {
	if x, ok := x.GetOptionalPage().(*GetLocationCollectionRequest_Page); ok {
		return x.Page
	}
	return 0
}

func (m *GetLocationCollectionRequest) GetOptionalSort() isGetLocationCollectionRequest_OptionalSort {
	if m != nil {
		return m.OptionalSort
	}
	return nil
}

func (x *GetLocationCollectionRequest) GetSort() string {
	if x, ok := x.GetOptionalSort().(*GetLocationCollectionRequest_Sort); ok {
		return x.Sort
	}
	return ""
}

type isGetLocationCollectionRequest_OptionalFields interface {
	isGetLocationCollectionRequest_OptionalFields()
}

type GetLocationCollectionRequest_Fields struct {
	Fields string `protobuf:"bytes,1,opt,name=fields,proto3,oneof"`
}

func (*GetLocationCollectionRequest_Fields) isGetLocationCollectionRequest_OptionalFields() {}

type isGetLocationCollectionRequest_OptionalPageSize interface {
	isGetLocationCollectionRequest_OptionalPageSize()
}

type GetLocationCollectionRequest_PageSize struct {
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3,oneof"`
}

func (*GetLocationCollectionRequest_PageSize) isGetLocationCollectionRequest_OptionalPageSize() {}

type isGetLocationCollectionRequest_OptionalPage interface {
	isGetLocationCollectionRequest_OptionalPage()
}

type GetLocationCollectionRequest_Page struct {
	Page int32 `protobuf:"varint,3,opt,name=page,proto3,oneof"`
}

func (*GetLocationCollectionRequest_Page) isGetLocationCollectionRequest_OptionalPage() {}

type isGetLocationCollectionRequest_OptionalSort interface {
	isGetLocationCollectionRequest_OptionalSort()
}

type GetLocationCollectionRequest_Sort struct {
	Sort string `protobuf:"bytes,4,opt,name=sort,proto3,oneof"`
}

func (*GetLocationCollectionRequest_Sort) isGetLocationCollectionRequest_OptionalSort() {}

type GetLocationCollectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*Location `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Meta *Meta       `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *GetLocationCollectionResponse) Reset() {
	*x = GetLocationCollectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLocationCollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLocationCollectionResponse) ProtoMessage() {}

func (x *GetLocationCollectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLocationCollectionResponse.ProtoReflect.Descriptor instead.
func (*GetLocationCollectionResponse) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{8}
}

func (x *GetLocationCollectionResponse) GetData() []*Location {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetLocationCollectionResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

type GetLocationItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Types that are assignable to OptionalFields:
	//
	//	*GetLocationItemRequest_Fields
	OptionalFields isGetLocationItemRequest_OptionalFields `protobuf_oneof:"optional_fields"`
}

func (x *GetLocationItemRequest) Reset() {
	*x = GetLocationItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLocationItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLocationItemRequest) ProtoMessage() {}

func (x *GetLocationItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLocationItemRequest.ProtoReflect.Descriptor instead.
func (*GetLocationItemRequest) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{9}
}

func (x *GetLocationItemRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (m *GetLocationItemRequest) GetOptionalFields() isGetLocationItemRequest_OptionalFields {
	if m != nil {
		return m.OptionalFields
	}
	return nil
}

func (x *GetLocationItemRequest) GetFields() string {
	if x, ok := x.GetOptionalFields().(*GetLocationItemRequest_Fields); ok {
		return x.Fields
	}
	return ""
}

type isGetLocationItemRequest_OptionalFields interface {
	isGetLocationItemRequest_OptionalFields()
}

type GetLocationItemRequest_Fields struct {
	Fields string `protobuf:"bytes,2,opt,name=fields,proto3,oneof"`
}

func (*GetLocationItemRequest_Fields) isGetLocationItemRequest_OptionalFields() {}

type GetLocationItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *Location `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Meta *Meta     `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *GetLocationItemResponse) Reset() {
	*x = GetLocationItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLocationItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLocationItemResponse) ProtoMessage() {}

func (x *GetLocationItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLocationItemResponse.ProtoReflect.Descriptor instead.
func (*GetLocationItemResponse) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{10}
}

func (x *GetLocationItemResponse) GetData() *Location {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetLocationItemResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

type CreateLocationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ParentUuid string       `protobuf:"bytes,2,opt,name=parent_uuid,json=parentUuid,proto3" json:"parent_uuid,omitempty"`
	Type       LocationType `protobuf:"varint,3,opt,name=type,proto3,enum=ecooda.v1.LocationType" json:"type,omitempty"`
}

func (x *CreateLocationRequest) Reset() {
	*x = CreateLocationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLocationRequest) ProtoMessage() {}

func (x *CreateLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLocationRequest.ProtoReflect.Descriptor instead.
func (*CreateLocationRequest) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{11}
}

func (x *CreateLocationRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateLocationRequest) GetParentUuid() string {
	if x != nil {
		return x.ParentUuid
	}
	return ""
}

func (x *CreateLocationRequest) GetType() LocationType {
	if x != nil {
		return x.Type
	}
	return LocationType_LOCATION_TYPE_UNSPECIFIED
}

type CreateLocationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateLocationResponse) Reset() {
	*x = CreateLocationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLocationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLocationResponse) ProtoMessage() {}

func (x *CreateLocationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLocationResponse.ProtoReflect.Descriptor instead.
func (*CreateLocationResponse) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{12}
}

type UpdateLocationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string       `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Name string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type LocationType `protobuf:"varint,3,opt,name=type,proto3,enum=ecooda.v1.LocationType" json:"type,omitempty"`
}

func (x *UpdateLocationRequest) Reset() {
	*x = UpdateLocationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLocationRequest) ProtoMessage() {}

func (x *UpdateLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLocationRequest.ProtoReflect.Descriptor instead.
func (*UpdateLocationRequest) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateLocationRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *UpdateLocationRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateLocationRequest) GetType() LocationType {
	if x != nil {
		return x.Type
	}
	return LocationType_LOCATION_TYPE_UNSPECIFIED
}

type UpdateLocationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateLocationResponse) Reset() {
	*x = UpdateLocationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLocationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLocationResponse) ProtoMessage() {}

func (x *UpdateLocationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLocationResponse.ProtoReflect.Descriptor instead.
func (*UpdateLocationResponse) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{14}
}

type DeleteLocationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *DeleteLocationRequest) Reset() {
	*x = DeleteLocationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLocationRequest) ProtoMessage() {}

func (x *DeleteLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLocationRequest.ProtoReflect.Descriptor instead.
func (*DeleteLocationRequest) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteLocationRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type DeleteLocationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteLocationResponse) Reset() {
	*x = DeleteLocationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLocationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLocationResponse) ProtoMessage() {}

func (x *DeleteLocationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLocationResponse.ProtoReflect.Descriptor instead.
func (*DeleteLocationResponse) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{16}
}

type AddCountryToLocationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid         string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	LocationUuid string `protobuf:"bytes,2,opt,name=location_uuid,json=locationUuid,proto3" json:"location_uuid,omitempty"`
}

func (x *AddCountryToLocationRequest) Reset() {
	*x = AddCountryToLocationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCountryToLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCountryToLocationRequest) ProtoMessage() {}

func (x *AddCountryToLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCountryToLocationRequest.ProtoReflect.Descriptor instead.
func (*AddCountryToLocationRequest) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{17}
}

func (x *AddCountryToLocationRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *AddCountryToLocationRequest) GetLocationUuid() string {
	if x != nil {
		return x.LocationUuid
	}
	return ""
}

type AddCountryToLocationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddCountryToLocationResponse) Reset() {
	*x = AddCountryToLocationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCountryToLocationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCountryToLocationResponse) ProtoMessage() {}

func (x *AddCountryToLocationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCountryToLocationResponse.ProtoReflect.Descriptor instead.
func (*AddCountryToLocationResponse) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{18}
}

type AddRegionToLocationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid         string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	LocationUuid string `protobuf:"bytes,2,opt,name=location_uuid,json=locationUuid,proto3" json:"location_uuid,omitempty"`
}

func (x *AddRegionToLocationRequest) Reset() {
	*x = AddRegionToLocationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRegionToLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRegionToLocationRequest) ProtoMessage() {}

func (x *AddRegionToLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRegionToLocationRequest.ProtoReflect.Descriptor instead.
func (*AddRegionToLocationRequest) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{19}
}

func (x *AddRegionToLocationRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *AddRegionToLocationRequest) GetLocationUuid() string {
	if x != nil {
		return x.LocationUuid
	}
	return ""
}

type AddRegionToLocationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddRegionToLocationResponse) Reset() {
	*x = AddRegionToLocationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRegionToLocationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRegionToLocationResponse) ProtoMessage() {}

func (x *AddRegionToLocationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRegionToLocationResponse.ProtoReflect.Descriptor instead.
func (*AddRegionToLocationResponse) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{20}
}

type RemoveCountryFromLocationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid         string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	LocationUuid string `protobuf:"bytes,2,opt,name=location_uuid,json=locationUuid,proto3" json:"location_uuid,omitempty"`
}

func (x *RemoveCountryFromLocationRequest) Reset() {
	*x = RemoveCountryFromLocationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveCountryFromLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveCountryFromLocationRequest) ProtoMessage() {}

func (x *RemoveCountryFromLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveCountryFromLocationRequest.ProtoReflect.Descriptor instead.
func (*RemoveCountryFromLocationRequest) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{21}
}

func (x *RemoveCountryFromLocationRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *RemoveCountryFromLocationRequest) GetLocationUuid() string {
	if x != nil {
		return x.LocationUuid
	}
	return ""
}

type RemoveCountryFromLocationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveCountryFromLocationResponse) Reset() {
	*x = RemoveCountryFromLocationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveCountryFromLocationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveCountryFromLocationResponse) ProtoMessage() {}

func (x *RemoveCountryFromLocationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveCountryFromLocationResponse.ProtoReflect.Descriptor instead.
func (*RemoveCountryFromLocationResponse) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{22}
}

type RemoveRegionFromLocationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid         string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	LocationUuid string `protobuf:"bytes,2,opt,name=location_uuid,json=locationUuid,proto3" json:"location_uuid,omitempty"`
}

func (x *RemoveRegionFromLocationRequest) Reset() {
	*x = RemoveRegionFromLocationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveRegionFromLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveRegionFromLocationRequest) ProtoMessage() {}

func (x *RemoveRegionFromLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveRegionFromLocationRequest.ProtoReflect.Descriptor instead.
func (*RemoveRegionFromLocationRequest) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{23}
}

func (x *RemoveRegionFromLocationRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *RemoveRegionFromLocationRequest) GetLocationUuid() string {
	if x != nil {
		return x.LocationUuid
	}
	return ""
}

type RemoveRegionFromLocationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveRegionFromLocationResponse) Reset() {
	*x = RemoveRegionFromLocationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveRegionFromLocationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveRegionFromLocationResponse) ProtoMessage() {}

func (x *RemoveRegionFromLocationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveRegionFromLocationResponse.ProtoReflect.Descriptor instead.
func (*RemoveRegionFromLocationResponse) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{24}
}

type AddChallengeToLocationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid          string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	ChallengeUuid string `protobuf:"bytes,2,opt,name=challenge_uuid,json=challengeUuid,proto3" json:"challenge_uuid,omitempty"`
}

func (x *AddChallengeToLocationRequest) Reset() {
	*x = AddChallengeToLocationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddChallengeToLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddChallengeToLocationRequest) ProtoMessage() {}

func (x *AddChallengeToLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddChallengeToLocationRequest.ProtoReflect.Descriptor instead.
func (*AddChallengeToLocationRequest) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{25}
}

func (x *AddChallengeToLocationRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *AddChallengeToLocationRequest) GetChallengeUuid() string {
	if x != nil {
		return x.ChallengeUuid
	}
	return ""
}

type AddChallengeToLocationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddChallengeToLocationResponse) Reset() {
	*x = AddChallengeToLocationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddChallengeToLocationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddChallengeToLocationResponse) ProtoMessage() {}

func (x *AddChallengeToLocationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddChallengeToLocationResponse.ProtoReflect.Descriptor instead.
func (*AddChallengeToLocationResponse) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{26}
}

type RemoveChallengeFromLocationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid          string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	ChallengeUuid string `protobuf:"bytes,2,opt,name=challenge_uuid,json=challengeUuid,proto3" json:"challenge_uuid,omitempty"`
}

func (x *RemoveChallengeFromLocationRequest) Reset() {
	*x = RemoveChallengeFromLocationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveChallengeFromLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveChallengeFromLocationRequest) ProtoMessage() {}

func (x *RemoveChallengeFromLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveChallengeFromLocationRequest.ProtoReflect.Descriptor instead.
func (*RemoveChallengeFromLocationRequest) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{27}
}

func (x *RemoveChallengeFromLocationRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *RemoveChallengeFromLocationRequest) GetChallengeUuid() string {
	if x != nil {
		return x.ChallengeUuid
	}
	return ""
}

type RemoveChallengeFromLocationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveChallengeFromLocationResponse) Reset() {
	*x = RemoveChallengeFromLocationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveChallengeFromLocationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveChallengeFromLocationResponse) ProtoMessage() {}

func (x *RemoveChallengeFromLocationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveChallengeFromLocationResponse.ProtoReflect.Descriptor instead.
func (*RemoveChallengeFromLocationResponse) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{28}
}

type GetChallengesFromLocationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Types that are assignable to OptionalFields:
	//
	//	*GetChallengesFromLocationRequest_Fields
	OptionalFields isGetChallengesFromLocationRequest_OptionalFields `protobuf_oneof:"optional_fields"`
	// Types that are assignable to OptionalPageSize:
	//
	//	*GetChallengesFromLocationRequest_PageSize
	OptionalPageSize isGetChallengesFromLocationRequest_OptionalPageSize `protobuf_oneof:"optional_page_size"`
	// Types that are assignable to OptionalPage:
	//
	//	*GetChallengesFromLocationRequest_Page
	OptionalPage isGetChallengesFromLocationRequest_OptionalPage `protobuf_oneof:"optional_page"`
	// Types that are assignable to OptionalSort:
	//
	//	*GetChallengesFromLocationRequest_Sort
	OptionalSort isGetChallengesFromLocationRequest_OptionalSort `protobuf_oneof:"optional_sort"`
}

func (x *GetChallengesFromLocationRequest) Reset() {
	*x = GetChallengesFromLocationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChallengesFromLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChallengesFromLocationRequest) ProtoMessage() {}

func (x *GetChallengesFromLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChallengesFromLocationRequest.ProtoReflect.Descriptor instead.
func (*GetChallengesFromLocationRequest) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{29}
}

func (x *GetChallengesFromLocationRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (m *GetChallengesFromLocationRequest) GetOptionalFields() isGetChallengesFromLocationRequest_OptionalFields {
	if m != nil {
		return m.OptionalFields
	}
	return nil
}

func (x *GetChallengesFromLocationRequest) GetFields() string {
	if x, ok := x.GetOptionalFields().(*GetChallengesFromLocationRequest_Fields); ok {
		return x.Fields
	}
	return ""
}

func (m *GetChallengesFromLocationRequest) GetOptionalPageSize() isGetChallengesFromLocationRequest_OptionalPageSize {
	if m != nil {
		return m.OptionalPageSize
	}
	return nil
}

func (x *GetChallengesFromLocationRequest) GetPageSize() int32 {
	if x, ok := x.GetOptionalPageSize().(*GetChallengesFromLocationRequest_PageSize); ok {
		return x.PageSize
	}
	return 0
}

func (m *GetChallengesFromLocationRequest) GetOptionalPage() isGetChallengesFromLocationRequest_OptionalPage {
	if m != nil {
		return m.OptionalPage
	}
	return nil
}

func (x *GetChallengesFromLocationRequest) GetPage() int32 {
	if x, ok := x.GetOptionalPage().(*GetChallengesFromLocationRequest_Page); ok {
		return x.Page
	}
	return 0
}

func (m *GetChallengesFromLocationRequest) GetOptionalSort() isGetChallengesFromLocationRequest_OptionalSort {
	if m != nil {
		return m.OptionalSort
	}
	return nil
}

func (x *GetChallengesFromLocationRequest) GetSort() string {
	if x, ok := x.GetOptionalSort().(*GetChallengesFromLocationRequest_Sort); ok {
		return x.Sort
	}
	return ""
}

type isGetChallengesFromLocationRequest_OptionalFields interface {
	isGetChallengesFromLocationRequest_OptionalFields()
}

type GetChallengesFromLocationRequest_Fields struct {
	Fields string `protobuf:"bytes,2,opt,name=fields,proto3,oneof"`
}

func (*GetChallengesFromLocationRequest_Fields) isGetChallengesFromLocationRequest_OptionalFields() {}

type isGetChallengesFromLocationRequest_OptionalPageSize interface {
	isGetChallengesFromLocationRequest_OptionalPageSize()
}

type GetChallengesFromLocationRequest_PageSize struct {
	PageSize int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3,oneof"`
}

func (*GetChallengesFromLocationRequest_PageSize) isGetChallengesFromLocationRequest_OptionalPageSize() {
}

type isGetChallengesFromLocationRequest_OptionalPage interface {
	isGetChallengesFromLocationRequest_OptionalPage()
}

type GetChallengesFromLocationRequest_Page struct {
	Page int32 `protobuf:"varint,4,opt,name=page,proto3,oneof"`
}

func (*GetChallengesFromLocationRequest_Page) isGetChallengesFromLocationRequest_OptionalPage() {}

type isGetChallengesFromLocationRequest_OptionalSort interface {
	isGetChallengesFromLocationRequest_OptionalSort()
}

type GetChallengesFromLocationRequest_Sort struct {
	Sort string `protobuf:"bytes,5,opt,name=sort,proto3,oneof"`
}

func (*GetChallengesFromLocationRequest_Sort) isGetChallengesFromLocationRequest_OptionalSort() {}

type GetChallengesFromLocationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*Challenge `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Meta *Meta        `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *GetChallengesFromLocationResponse) Reset() {
	*x = GetChallengesFromLocationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChallengesFromLocationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChallengesFromLocationResponse) ProtoMessage() {}

func (x *GetChallengesFromLocationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChallengesFromLocationResponse.ProtoReflect.Descriptor instead.
func (*GetChallengesFromLocationResponse) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{30}
}

func (x *GetChallengesFromLocationResponse) GetData() []*Challenge {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetChallengesFromLocationResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

type GetLocationsFromChallengeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Types that are assignable to OptionalFields:
	//
	//	*GetLocationsFromChallengeRequest_Fields
	OptionalFields isGetLocationsFromChallengeRequest_OptionalFields `protobuf_oneof:"optional_fields"`
}

func (x *GetLocationsFromChallengeRequest) Reset() {
	*x = GetLocationsFromChallengeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLocationsFromChallengeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLocationsFromChallengeRequest) ProtoMessage() {}

func (x *GetLocationsFromChallengeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLocationsFromChallengeRequest.ProtoReflect.Descriptor instead.
func (*GetLocationsFromChallengeRequest) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{31}
}

func (x *GetLocationsFromChallengeRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (m *GetLocationsFromChallengeRequest) GetOptionalFields() isGetLocationsFromChallengeRequest_OptionalFields {
	if m != nil {
		return m.OptionalFields
	}
	return nil
}

func (x *GetLocationsFromChallengeRequest) GetFields() string {
	if x, ok := x.GetOptionalFields().(*GetLocationsFromChallengeRequest_Fields); ok {
		return x.Fields
	}
	return ""
}

type isGetLocationsFromChallengeRequest_OptionalFields interface {
	isGetLocationsFromChallengeRequest_OptionalFields()
}

type GetLocationsFromChallengeRequest_Fields struct {
	Fields string `protobuf:"bytes,2,opt,name=fields,proto3,oneof"`
}

func (*GetLocationsFromChallengeRequest_Fields) isGetLocationsFromChallengeRequest_OptionalFields() {}

type GetLocationsFromChallengeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *Location `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Meta *Meta     `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *GetLocationsFromChallengeResponse) Reset() {
	*x = GetLocationsFromChallengeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLocationsFromChallengeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLocationsFromChallengeResponse) ProtoMessage() {}

func (x *GetLocationsFromChallengeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLocationsFromChallengeResponse.ProtoReflect.Descriptor instead.
func (*GetLocationsFromChallengeResponse) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{32}
}

func (x *GetLocationsFromChallengeResponse) GetData() *Location {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetLocationsFromChallengeResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

// ------------------ CHALLENGE SERVICE ---------------------------------------------------------------------------------
type Category struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Types that are assignable to OptionalName:
	//
	//	*Category_Name
	OptionalName isCategory_OptionalName `protobuf_oneof:"optional_name"`
	CreatedAt    string                  `protobuf:"bytes,3,opt,name=created_at,proto3" json:"created_at,omitempty"`
	UpdatedAt    string                  `protobuf:"bytes,4,opt,name=updated_at,proto3" json:"updated_at,omitempty"`
}

func (x *Category) Reset() {
	*x = Category{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Category) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Category) ProtoMessage() {}

func (x *Category) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Category.ProtoReflect.Descriptor instead.
func (*Category) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{33}
}

func (x *Category) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (m *Category) GetOptionalName() isCategory_OptionalName {
	if m != nil {
		return m.OptionalName
	}
	return nil
}

func (x *Category) GetName() string {
	if x, ok := x.GetOptionalName().(*Category_Name); ok {
		return x.Name
	}
	return ""
}

func (x *Category) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Category) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type isCategory_OptionalName interface {
	isCategory_OptionalName()
}

type Category_Name struct {
	Name string `protobuf:"bytes,2,opt,name=name,proto3,oneof"`
}

func (*Category_Name) isCategory_OptionalName() {}

type Categories struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*Category `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *Categories) Reset() {
	*x = Categories{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Categories) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Categories) ProtoMessage() {}

func (x *Categories) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Categories.ProtoReflect.Descriptor instead.
func (*Categories) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{34}
}

func (x *Categories) GetData() []*Category {
	if x != nil {
		return x.Data
	}
	return nil
}

type Challenge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Types that are assignable to OptionalName:
	//
	//	*Challenge_Name
	OptionalName isChallenge_OptionalName `protobuf_oneof:"optional_name"`
	// Types that are assignable to OptionalDescription:
	//
	//	*Challenge_Description
	OptionalDescription isChallenge_OptionalDescription `protobuf_oneof:"optional_description"`
	// Types that are assignable to OptionalStreet:
	//
	//	*Challenge_Street
	OptionalStreet isChallenge_OptionalStreet `protobuf_oneof:"optional_street"`
	// Types that are assignable to OptionalPostcode:
	//
	//	*Challenge_Postcode
	OptionalPostcode isChallenge_OptionalPostcode `protobuf_oneof:"optional_postcode"`
	// Types that are assignable to OptionalLatitude:
	//
	//	*Challenge_Latitude
	OptionalLatitude isChallenge_OptionalLatitude `protobuf_oneof:"optional_latitude"`
	// Types that are assignable to OptionalLongitude:
	//
	//	*Challenge_Longitude
	OptionalLongitude isChallenge_OptionalLongitude `protobuf_oneof:"optional_longitude"`
	// Types that are assignable to OptionalThumbnail:
	//
	//	*Challenge_Thumbnail
	OptionalThumbnail isChallenge_OptionalThumbnail `protobuf_oneof:"optional_thumbnail"`
	// Types that are assignable to OptionalGallery:
	//
	//	*Challenge_Gallery
	OptionalGallery isChallenge_OptionalGallery `protobuf_oneof:"optional_gallery"`
	CreatedAt       string                      `protobuf:"bytes,10,opt,name=created_at,proto3" json:"created_at,omitempty"`
	UpdatedAt       string                      `protobuf:"bytes,11,opt,name=updated_at,proto3" json:"updated_at,omitempty"`
	// Types that are assignable to OptionalCategories:
	//
	//	*Challenge_Categories
	OptionalCategories isChallenge_OptionalCategories `protobuf_oneof:"optional_categories"`
	// Types that are assignable to OptionalLocations:
	//
	//	*Challenge_Locations
	OptionalLocations isChallenge_OptionalLocations `protobuf_oneof:"optional_locations"`
}

func (x *Challenge) Reset() {
	*x = Challenge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Challenge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Challenge) ProtoMessage() {}

func (x *Challenge) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Challenge.ProtoReflect.Descriptor instead.
func (*Challenge) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{35}
}

func (x *Challenge) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (m *Challenge) GetOptionalName() isChallenge_OptionalName {
	if m != nil {
		return m.OptionalName
	}
	return nil
}

func (x *Challenge) GetName() string {
	if x, ok := x.GetOptionalName().(*Challenge_Name); ok {
		return x.Name
	}
	return ""
}

func (m *Challenge) GetOptionalDescription() isChallenge_OptionalDescription {
	if m != nil {
		return m.OptionalDescription
	}
	return nil
}

func (x *Challenge) GetDescription() string {
	if x, ok := x.GetOptionalDescription().(*Challenge_Description); ok {
		return x.Description
	}
	return ""
}

func (m *Challenge) GetOptionalStreet() isChallenge_OptionalStreet {
	if m != nil {
		return m.OptionalStreet
	}
	return nil
}

func (x *Challenge) GetStreet() string {
	if x, ok := x.GetOptionalStreet().(*Challenge_Street); ok {
		return x.Street
	}
	return ""
}

func (m *Challenge) GetOptionalPostcode() isChallenge_OptionalPostcode {
	if m != nil {
		return m.OptionalPostcode
	}
	return nil
}

func (x *Challenge) GetPostcode() string {
	if x, ok := x.GetOptionalPostcode().(*Challenge_Postcode); ok {
		return x.Postcode
	}
	return ""
}

func (m *Challenge) GetOptionalLatitude() isChallenge_OptionalLatitude {
	if m != nil {
		return m.OptionalLatitude
	}
	return nil
}

func (x *Challenge) GetLatitude() float32 {
	if x, ok := x.GetOptionalLatitude().(*Challenge_Latitude); ok {
		return x.Latitude
	}
	return 0
}

func (m *Challenge) GetOptionalLongitude() isChallenge_OptionalLongitude {
	if m != nil {
		return m.OptionalLongitude
	}
	return nil
}

func (x *Challenge) GetLongitude() float32 {
	if x, ok := x.GetOptionalLongitude().(*Challenge_Longitude); ok {
		return x.Longitude
	}
	return 0
}

func (m *Challenge) GetOptionalThumbnail() isChallenge_OptionalThumbnail {
	if m != nil {
		return m.OptionalThumbnail
	}
	return nil
}

func (x *Challenge) GetThumbnail() string {
	if x, ok := x.GetOptionalThumbnail().(*Challenge_Thumbnail); ok {
		return x.Thumbnail
	}
	return ""
}

func (m *Challenge) GetOptionalGallery() isChallenge_OptionalGallery {
	if m != nil {
		return m.OptionalGallery
	}
	return nil
}

func (x *Challenge) GetGallery() string {
	if x, ok := x.GetOptionalGallery().(*Challenge_Gallery); ok {
		return x.Gallery
	}
	return ""
}

func (x *Challenge) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Challenge) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (m *Challenge) GetOptionalCategories() isChallenge_OptionalCategories {
	if m != nil {
		return m.OptionalCategories
	}
	return nil
}

func (x *Challenge) GetCategories() *Categories {
	if x, ok := x.GetOptionalCategories().(*Challenge_Categories); ok {
		return x.Categories
	}
	return nil
}

func (m *Challenge) GetOptionalLocations() isChallenge_OptionalLocations {
	if m != nil {
		return m.OptionalLocations
	}
	return nil
}

func (x *Challenge) GetLocations() *Locations {
	if x, ok := x.GetOptionalLocations().(*Challenge_Locations); ok {
		return x.Locations
	}
	return nil
}

type isChallenge_OptionalName interface {
	isChallenge_OptionalName()
}

type Challenge_Name struct {
	Name string `protobuf:"bytes,2,opt,name=name,proto3,oneof"`
}

func (*Challenge_Name) isChallenge_OptionalName() {}

type isChallenge_OptionalDescription interface {
	isChallenge_OptionalDescription()
}

type Challenge_Description struct {
	Description string `protobuf:"bytes,3,opt,name=description,proto3,oneof"`
}

func (*Challenge_Description) isChallenge_OptionalDescription() {}

type isChallenge_OptionalStreet interface {
	isChallenge_OptionalStreet()
}

type Challenge_Street struct {
	Street string `protobuf:"bytes,4,opt,name=street,proto3,oneof"`
}

func (*Challenge_Street) isChallenge_OptionalStreet() {}

type isChallenge_OptionalPostcode interface {
	isChallenge_OptionalPostcode()
}

type Challenge_Postcode struct {
	Postcode string `protobuf:"bytes,5,opt,name=postcode,proto3,oneof"`
}

func (*Challenge_Postcode) isChallenge_OptionalPostcode() {}

type isChallenge_OptionalLatitude interface {
	isChallenge_OptionalLatitude()
}

type Challenge_Latitude struct {
	Latitude float32 `protobuf:"fixed32,6,opt,name=latitude,proto3,oneof"`
}

func (*Challenge_Latitude) isChallenge_OptionalLatitude() {}

type isChallenge_OptionalLongitude interface {
	isChallenge_OptionalLongitude()
}

type Challenge_Longitude struct {
	Longitude float32 `protobuf:"fixed32,7,opt,name=longitude,proto3,oneof"`
}

func (*Challenge_Longitude) isChallenge_OptionalLongitude() {}

type isChallenge_OptionalThumbnail interface {
	isChallenge_OptionalThumbnail()
}

type Challenge_Thumbnail struct {
	Thumbnail string `protobuf:"bytes,8,opt,name=thumbnail,proto3,oneof"`
}

func (*Challenge_Thumbnail) isChallenge_OptionalThumbnail() {}

type isChallenge_OptionalGallery interface {
	isChallenge_OptionalGallery()
}

type Challenge_Gallery struct {
	Gallery string `protobuf:"bytes,9,opt,name=gallery,proto3,oneof"`
}

func (*Challenge_Gallery) isChallenge_OptionalGallery() {}

type isChallenge_OptionalCategories interface {
	isChallenge_OptionalCategories()
}

type Challenge_Categories struct {
	Categories *Categories `protobuf:"bytes,12,opt,name=categories,proto3,oneof"`
}

func (*Challenge_Categories) isChallenge_OptionalCategories() {}

type isChallenge_OptionalLocations interface {
	isChallenge_OptionalLocations()
}

type Challenge_Locations struct {
	Locations *Locations `protobuf:"bytes,13,opt,name=locations,proto3,oneof"`
}

func (*Challenge_Locations) isChallenge_OptionalLocations() {}

type GetChallengeCollectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to OptionalFields:
	//
	//	*GetChallengeCollectionRequest_Fields
	OptionalFields isGetChallengeCollectionRequest_OptionalFields `protobuf_oneof:"optional_fields"`
	// Types that are assignable to OptionalPageSize:
	//
	//	*GetChallengeCollectionRequest_PageSize
	OptionalPageSize isGetChallengeCollectionRequest_OptionalPageSize `protobuf_oneof:"optional_page_size"`
	// Types that are assignable to OptionalPage:
	//
	//	*GetChallengeCollectionRequest_Page
	OptionalPage isGetChallengeCollectionRequest_OptionalPage `protobuf_oneof:"optional_page"`
	// Types that are assignable to OptionalSort:
	//
	//	*GetChallengeCollectionRequest_Sort
	OptionalSort isGetChallengeCollectionRequest_OptionalSort `protobuf_oneof:"optional_sort"`
}

func (x *GetChallengeCollectionRequest) Reset() {
	*x = GetChallengeCollectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChallengeCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChallengeCollectionRequest) ProtoMessage() {}

func (x *GetChallengeCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChallengeCollectionRequest.ProtoReflect.Descriptor instead.
func (*GetChallengeCollectionRequest) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{36}
}

func (m *GetChallengeCollectionRequest) GetOptionalFields() isGetChallengeCollectionRequest_OptionalFields {
	if m != nil {
		return m.OptionalFields
	}
	return nil
}

func (x *GetChallengeCollectionRequest) GetFields() string {
	if x, ok := x.GetOptionalFields().(*GetChallengeCollectionRequest_Fields); ok {
		return x.Fields
	}
	return ""
}

func (m *GetChallengeCollectionRequest) GetOptionalPageSize() isGetChallengeCollectionRequest_OptionalPageSize {
	if m != nil {
		return m.OptionalPageSize
	}
	return nil
}

func (x *GetChallengeCollectionRequest) GetPageSize() int32 {
	if x, ok := x.GetOptionalPageSize().(*GetChallengeCollectionRequest_PageSize); ok {
		return x.PageSize
	}
	return 0
}

func (m *GetChallengeCollectionRequest) GetOptionalPage() isGetChallengeCollectionRequest_OptionalPage {
	if m != nil {
		return m.OptionalPage
	}
	return nil
}

func (x *GetChallengeCollectionRequest) GetPage() int32 {
	if x, ok := x.GetOptionalPage().(*GetChallengeCollectionRequest_Page); ok {
		return x.Page
	}
	return 0
}

func (m *GetChallengeCollectionRequest) GetOptionalSort() isGetChallengeCollectionRequest_OptionalSort {
	if m != nil {
		return m.OptionalSort
	}
	return nil
}

func (x *GetChallengeCollectionRequest) GetSort() string {
	if x, ok := x.GetOptionalSort().(*GetChallengeCollectionRequest_Sort); ok {
		return x.Sort
	}
	return ""
}

type isGetChallengeCollectionRequest_OptionalFields interface {
	isGetChallengeCollectionRequest_OptionalFields()
}

type GetChallengeCollectionRequest_Fields struct {
	Fields string `protobuf:"bytes,1,opt,name=fields,proto3,oneof"`
}

func (*GetChallengeCollectionRequest_Fields) isGetChallengeCollectionRequest_OptionalFields() {}

type isGetChallengeCollectionRequest_OptionalPageSize interface {
	isGetChallengeCollectionRequest_OptionalPageSize()
}

type GetChallengeCollectionRequest_PageSize struct {
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3,oneof"`
}

func (*GetChallengeCollectionRequest_PageSize) isGetChallengeCollectionRequest_OptionalPageSize() {}

type isGetChallengeCollectionRequest_OptionalPage interface {
	isGetChallengeCollectionRequest_OptionalPage()
}

type GetChallengeCollectionRequest_Page struct {
	Page int32 `protobuf:"varint,3,opt,name=page,proto3,oneof"`
}

func (*GetChallengeCollectionRequest_Page) isGetChallengeCollectionRequest_OptionalPage() {}

type isGetChallengeCollectionRequest_OptionalSort interface {
	isGetChallengeCollectionRequest_OptionalSort()
}

type GetChallengeCollectionRequest_Sort struct {
	Sort string `protobuf:"bytes,4,opt,name=sort,proto3,oneof"`
}

func (*GetChallengeCollectionRequest_Sort) isGetChallengeCollectionRequest_OptionalSort() {}

type GetChallengeCollectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*Challenge `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Meta *Meta        `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *GetChallengeCollectionResponse) Reset() {
	*x = GetChallengeCollectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChallengeCollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChallengeCollectionResponse) ProtoMessage() {}

func (x *GetChallengeCollectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChallengeCollectionResponse.ProtoReflect.Descriptor instead.
func (*GetChallengeCollectionResponse) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{37}
}

func (x *GetChallengeCollectionResponse) GetData() []*Challenge {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetChallengeCollectionResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

type GetChallengeItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Types that are assignable to OptionalFields:
	//
	//	*GetChallengeItemRequest_Fields
	OptionalFields isGetChallengeItemRequest_OptionalFields `protobuf_oneof:"optional_fields"`
}

func (x *GetChallengeItemRequest) Reset() {
	*x = GetChallengeItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChallengeItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChallengeItemRequest) ProtoMessage() {}

func (x *GetChallengeItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChallengeItemRequest.ProtoReflect.Descriptor instead.
func (*GetChallengeItemRequest) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{38}
}

func (x *GetChallengeItemRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (m *GetChallengeItemRequest) GetOptionalFields() isGetChallengeItemRequest_OptionalFields {
	if m != nil {
		return m.OptionalFields
	}
	return nil
}

func (x *GetChallengeItemRequest) GetFields() string {
	if x, ok := x.GetOptionalFields().(*GetChallengeItemRequest_Fields); ok {
		return x.Fields
	}
	return ""
}

type isGetChallengeItemRequest_OptionalFields interface {
	isGetChallengeItemRequest_OptionalFields()
}

type GetChallengeItemRequest_Fields struct {
	Fields string `protobuf:"bytes,2,opt,name=fields,proto3,oneof"`
}

func (*GetChallengeItemRequest_Fields) isGetChallengeItemRequest_OptionalFields() {}

type GetChallengeItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *Challenge `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Meta *Meta      `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *GetChallengeItemResponse) Reset() {
	*x = GetChallengeItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChallengeItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChallengeItemResponse) ProtoMessage() {}

func (x *GetChallengeItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChallengeItemResponse.ProtoReflect.Descriptor instead.
func (*GetChallengeItemResponse) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{39}
}

func (x *GetChallengeItemResponse) GetData() *Challenge {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetChallengeItemResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

type GetChallengeItemsBatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuids []string `protobuf:"bytes,1,rep,name=uuids,proto3" json:"uuids,omitempty"`
	// Types that are assignable to OptionalFields:
	//
	//	*GetChallengeItemsBatchRequest_Fields
	OptionalFields isGetChallengeItemsBatchRequest_OptionalFields `protobuf_oneof:"optional_fields"`
	// Types that are assignable to OptionalPageSize:
	//
	//	*GetChallengeItemsBatchRequest_PageSize
	OptionalPageSize isGetChallengeItemsBatchRequest_OptionalPageSize `protobuf_oneof:"optional_page_size"`
	// Types that are assignable to OptionalPage:
	//
	//	*GetChallengeItemsBatchRequest_Page
	OptionalPage isGetChallengeItemsBatchRequest_OptionalPage `protobuf_oneof:"optional_page"`
	// Types that are assignable to OptionalSort:
	//
	//	*GetChallengeItemsBatchRequest_Sort
	OptionalSort isGetChallengeItemsBatchRequest_OptionalSort `protobuf_oneof:"optional_sort"`
}

func (x *GetChallengeItemsBatchRequest) Reset() {
	*x = GetChallengeItemsBatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChallengeItemsBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChallengeItemsBatchRequest) ProtoMessage() {}

func (x *GetChallengeItemsBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChallengeItemsBatchRequest.ProtoReflect.Descriptor instead.
func (*GetChallengeItemsBatchRequest) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{40}
}

func (x *GetChallengeItemsBatchRequest) GetUuids() []string {
	if x != nil {
		return x.Uuids
	}
	return nil
}

func (m *GetChallengeItemsBatchRequest) GetOptionalFields() isGetChallengeItemsBatchRequest_OptionalFields {
	if m != nil {
		return m.OptionalFields
	}
	return nil
}

func (x *GetChallengeItemsBatchRequest) GetFields() string {
	if x, ok := x.GetOptionalFields().(*GetChallengeItemsBatchRequest_Fields); ok {
		return x.Fields
	}
	return ""
}

func (m *GetChallengeItemsBatchRequest) GetOptionalPageSize() isGetChallengeItemsBatchRequest_OptionalPageSize {
	if m != nil {
		return m.OptionalPageSize
	}
	return nil
}

func (x *GetChallengeItemsBatchRequest) GetPageSize() int32 {
	if x, ok := x.GetOptionalPageSize().(*GetChallengeItemsBatchRequest_PageSize); ok {
		return x.PageSize
	}
	return 0
}

func (m *GetChallengeItemsBatchRequest) GetOptionalPage() isGetChallengeItemsBatchRequest_OptionalPage {
	if m != nil {
		return m.OptionalPage
	}
	return nil
}

func (x *GetChallengeItemsBatchRequest) GetPage() int32 {
	if x, ok := x.GetOptionalPage().(*GetChallengeItemsBatchRequest_Page); ok {
		return x.Page
	}
	return 0
}

func (m *GetChallengeItemsBatchRequest) GetOptionalSort() isGetChallengeItemsBatchRequest_OptionalSort {
	if m != nil {
		return m.OptionalSort
	}
	return nil
}

func (x *GetChallengeItemsBatchRequest) GetSort() string {
	if x, ok := x.GetOptionalSort().(*GetChallengeItemsBatchRequest_Sort); ok {
		return x.Sort
	}
	return ""
}

type isGetChallengeItemsBatchRequest_OptionalFields interface {
	isGetChallengeItemsBatchRequest_OptionalFields()
}

type GetChallengeItemsBatchRequest_Fields struct {
	Fields string `protobuf:"bytes,2,opt,name=fields,proto3,oneof"`
}

func (*GetChallengeItemsBatchRequest_Fields) isGetChallengeItemsBatchRequest_OptionalFields() {}

type isGetChallengeItemsBatchRequest_OptionalPageSize interface {
	isGetChallengeItemsBatchRequest_OptionalPageSize()
}

type GetChallengeItemsBatchRequest_PageSize struct {
	PageSize int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3,oneof"`
}

func (*GetChallengeItemsBatchRequest_PageSize) isGetChallengeItemsBatchRequest_OptionalPageSize() {}

type isGetChallengeItemsBatchRequest_OptionalPage interface {
	isGetChallengeItemsBatchRequest_OptionalPage()
}

type GetChallengeItemsBatchRequest_Page struct {
	Page int32 `protobuf:"varint,4,opt,name=page,proto3,oneof"`
}

func (*GetChallengeItemsBatchRequest_Page) isGetChallengeItemsBatchRequest_OptionalPage() {}

type isGetChallengeItemsBatchRequest_OptionalSort interface {
	isGetChallengeItemsBatchRequest_OptionalSort()
}

type GetChallengeItemsBatchRequest_Sort struct {
	Sort string `protobuf:"bytes,5,opt,name=sort,proto3,oneof"`
}

func (*GetChallengeItemsBatchRequest_Sort) isGetChallengeItemsBatchRequest_OptionalSort() {}

type GetChallengeItemsBatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*Challenge `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Meta *Meta        `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *GetChallengeItemsBatchResponse) Reset() {
	*x = GetChallengeItemsBatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChallengeItemsBatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChallengeItemsBatchResponse) ProtoMessage() {}

func (x *GetChallengeItemsBatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChallengeItemsBatchResponse.ProtoReflect.Descriptor instead.
func (*GetChallengeItemsBatchResponse) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{41}
}

func (x *GetChallengeItemsBatchResponse) GetData() []*Challenge {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetChallengeItemsBatchResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

type CreateChallengeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string  `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Street      string  `protobuf:"bytes,3,opt,name=street,proto3" json:"street,omitempty"`
	Postcode    string  `protobuf:"bytes,4,opt,name=postcode,proto3" json:"postcode,omitempty"`
	Latitude    float32 `protobuf:"fixed32,5,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude   float32 `protobuf:"fixed32,6,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Thumbnail   string  `protobuf:"bytes,7,opt,name=thumbnail,proto3" json:"thumbnail,omitempty"`
	Gallery     string  `protobuf:"bytes,8,opt,name=gallery,proto3" json:"gallery,omitempty"`
}

func (x *CreateChallengeRequest) Reset() {
	*x = CreateChallengeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateChallengeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChallengeRequest) ProtoMessage() {}

func (x *CreateChallengeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChallengeRequest.ProtoReflect.Descriptor instead.
func (*CreateChallengeRequest) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{42}
}

func (x *CreateChallengeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateChallengeRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateChallengeRequest) GetStreet() string {
	if x != nil {
		return x.Street
	}
	return ""
}

func (x *CreateChallengeRequest) GetPostcode() string {
	if x != nil {
		return x.Postcode
	}
	return ""
}

func (x *CreateChallengeRequest) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *CreateChallengeRequest) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *CreateChallengeRequest) GetThumbnail() string {
	if x != nil {
		return x.Thumbnail
	}
	return ""
}

func (x *CreateChallengeRequest) GetGallery() string {
	if x != nil {
		return x.Gallery
	}
	return ""
}

type CreateChallengeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateChallengeResponse) Reset() {
	*x = CreateChallengeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateChallengeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChallengeResponse) ProtoMessage() {}

func (x *CreateChallengeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChallengeResponse.ProtoReflect.Descriptor instead.
func (*CreateChallengeResponse) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{43}
}

type UpdateChallengeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid        string  `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Name        string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string  `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Street      string  `protobuf:"bytes,4,opt,name=street,proto3" json:"street,omitempty"`
	Postcode    string  `protobuf:"bytes,5,opt,name=postcode,proto3" json:"postcode,omitempty"`
	Latitude    float32 `protobuf:"fixed32,6,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude   float32 `protobuf:"fixed32,7,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Thumbnail   string  `protobuf:"bytes,8,opt,name=thumbnail,proto3" json:"thumbnail,omitempty"`
	Gallery     string  `protobuf:"bytes,9,opt,name=gallery,proto3" json:"gallery,omitempty"`
}

func (x *UpdateChallengeRequest) Reset() {
	*x = UpdateChallengeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateChallengeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateChallengeRequest) ProtoMessage() {}

func (x *UpdateChallengeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateChallengeRequest.ProtoReflect.Descriptor instead.
func (*UpdateChallengeRequest) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{44}
}

func (x *UpdateChallengeRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *UpdateChallengeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateChallengeRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateChallengeRequest) GetStreet() string {
	if x != nil {
		return x.Street
	}
	return ""
}

func (x *UpdateChallengeRequest) GetPostcode() string {
	if x != nil {
		return x.Postcode
	}
	return ""
}

func (x *UpdateChallengeRequest) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *UpdateChallengeRequest) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *UpdateChallengeRequest) GetThumbnail() string {
	if x != nil {
		return x.Thumbnail
	}
	return ""
}

func (x *UpdateChallengeRequest) GetGallery() string {
	if x != nil {
		return x.Gallery
	}
	return ""
}

type UpdateChallengeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateChallengeResponse) Reset() {
	*x = UpdateChallengeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateChallengeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateChallengeResponse) ProtoMessage() {}

func (x *UpdateChallengeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateChallengeResponse.ProtoReflect.Descriptor instead.
func (*UpdateChallengeResponse) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{45}
}

type DeleteChallengeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *DeleteChallengeRequest) Reset() {
	*x = DeleteChallengeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteChallengeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteChallengeRequest) ProtoMessage() {}

func (x *DeleteChallengeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteChallengeRequest.ProtoReflect.Descriptor instead.
func (*DeleteChallengeRequest) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{46}
}

func (x *DeleteChallengeRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type DeleteChallengeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteChallengeResponse) Reset() {
	*x = DeleteChallengeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteChallengeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteChallengeResponse) ProtoMessage() {}

func (x *DeleteChallengeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteChallengeResponse.ProtoReflect.Descriptor instead.
func (*DeleteChallengeResponse) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{47}
}

type AddCategoryToChallengeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid         string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	CategoryUuid string `protobuf:"bytes,2,opt,name=category_uuid,json=categoryUuid,proto3" json:"category_uuid,omitempty"`
}

func (x *AddCategoryToChallengeRequest) Reset() {
	*x = AddCategoryToChallengeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCategoryToChallengeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCategoryToChallengeRequest) ProtoMessage() {}

func (x *AddCategoryToChallengeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCategoryToChallengeRequest.ProtoReflect.Descriptor instead.
func (*AddCategoryToChallengeRequest) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{48}
}

func (x *AddCategoryToChallengeRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *AddCategoryToChallengeRequest) GetCategoryUuid() string {
	if x != nil {
		return x.CategoryUuid
	}
	return ""
}

type AddCategoryToChallengeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddCategoryToChallengeResponse) Reset() {
	*x = AddCategoryToChallengeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCategoryToChallengeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCategoryToChallengeResponse) ProtoMessage() {}

func (x *AddCategoryToChallengeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCategoryToChallengeResponse.ProtoReflect.Descriptor instead.
func (*AddCategoryToChallengeResponse) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{49}
}

type RemoveCategoryFromChallengeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid         string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	CategoryUuid string `protobuf:"bytes,2,opt,name=category_uuid,json=categoryUuid,proto3" json:"category_uuid,omitempty"`
}

func (x *RemoveCategoryFromChallengeRequest) Reset() {
	*x = RemoveCategoryFromChallengeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveCategoryFromChallengeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveCategoryFromChallengeRequest) ProtoMessage() {}

func (x *RemoveCategoryFromChallengeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveCategoryFromChallengeRequest.ProtoReflect.Descriptor instead.
func (*RemoveCategoryFromChallengeRequest) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{50}
}

func (x *RemoveCategoryFromChallengeRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *RemoveCategoryFromChallengeRequest) GetCategoryUuid() string {
	if x != nil {
		return x.CategoryUuid
	}
	return ""
}

type RemoveCategoryFromChallengeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveCategoryFromChallengeResponse) Reset() {
	*x = RemoveCategoryFromChallengeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveCategoryFromChallengeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveCategoryFromChallengeResponse) ProtoMessage() {}

func (x *RemoveCategoryFromChallengeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveCategoryFromChallengeResponse.ProtoReflect.Descriptor instead.
func (*RemoveCategoryFromChallengeResponse) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{51}
}

type GetCategoryCollectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to OptionalFields:
	//
	//	*GetCategoryCollectionRequest_Fields
	OptionalFields isGetCategoryCollectionRequest_OptionalFields `protobuf_oneof:"optional_fields"`
	// Types that are assignable to OptionalPageSize:
	//
	//	*GetCategoryCollectionRequest_PageSize
	OptionalPageSize isGetCategoryCollectionRequest_OptionalPageSize `protobuf_oneof:"optional_page_size"`
	// Types that are assignable to OptionalPage:
	//
	//	*GetCategoryCollectionRequest_Page
	OptionalPage isGetCategoryCollectionRequest_OptionalPage `protobuf_oneof:"optional_page"`
	// Types that are assignable to OptionalSort:
	//
	//	*GetCategoryCollectionRequest_Sort
	OptionalSort isGetCategoryCollectionRequest_OptionalSort `protobuf_oneof:"optional_sort"`
}

func (x *GetCategoryCollectionRequest) Reset() {
	*x = GetCategoryCollectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCategoryCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCategoryCollectionRequest) ProtoMessage() {}

func (x *GetCategoryCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCategoryCollectionRequest.ProtoReflect.Descriptor instead.
func (*GetCategoryCollectionRequest) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{52}
}

func (m *GetCategoryCollectionRequest) GetOptionalFields() isGetCategoryCollectionRequest_OptionalFields {
	if m != nil {
		return m.OptionalFields
	}
	return nil
}

func (x *GetCategoryCollectionRequest) GetFields() string {
	if x, ok := x.GetOptionalFields().(*GetCategoryCollectionRequest_Fields); ok {
		return x.Fields
	}
	return ""
}

func (m *GetCategoryCollectionRequest) GetOptionalPageSize() isGetCategoryCollectionRequest_OptionalPageSize {
	if m != nil {
		return m.OptionalPageSize
	}
	return nil
}

func (x *GetCategoryCollectionRequest) GetPageSize() int32 {
	if x, ok := x.GetOptionalPageSize().(*GetCategoryCollectionRequest_PageSize); ok {
		return x.PageSize
	}
	return 0
}

func (m *GetCategoryCollectionRequest) GetOptionalPage() isGetCategoryCollectionRequest_OptionalPage {
	if m != nil {
		return m.OptionalPage
	}
	return nil
}

func (x *GetCategoryCollectionRequest) GetPage() int32 {
	if x, ok := x.GetOptionalPage().(*GetCategoryCollectionRequest_Page); ok {
		return x.Page
	}
	return 0
}

func (m *GetCategoryCollectionRequest) GetOptionalSort() isGetCategoryCollectionRequest_OptionalSort {
	if m != nil {
		return m.OptionalSort
	}
	return nil
}

func (x *GetCategoryCollectionRequest) GetSort() string {
	if x, ok := x.GetOptionalSort().(*GetCategoryCollectionRequest_Sort); ok {
		return x.Sort
	}
	return ""
}

type isGetCategoryCollectionRequest_OptionalFields interface {
	isGetCategoryCollectionRequest_OptionalFields()
}

type GetCategoryCollectionRequest_Fields struct {
	Fields string `protobuf:"bytes,1,opt,name=fields,proto3,oneof"`
}

func (*GetCategoryCollectionRequest_Fields) isGetCategoryCollectionRequest_OptionalFields() {}

type isGetCategoryCollectionRequest_OptionalPageSize interface {
	isGetCategoryCollectionRequest_OptionalPageSize()
}

type GetCategoryCollectionRequest_PageSize struct {
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3,oneof"`
}

func (*GetCategoryCollectionRequest_PageSize) isGetCategoryCollectionRequest_OptionalPageSize() {}

type isGetCategoryCollectionRequest_OptionalPage interface {
	isGetCategoryCollectionRequest_OptionalPage()
}

type GetCategoryCollectionRequest_Page struct {
	Page int32 `protobuf:"varint,3,opt,name=page,proto3,oneof"`
}

func (*GetCategoryCollectionRequest_Page) isGetCategoryCollectionRequest_OptionalPage() {}

type isGetCategoryCollectionRequest_OptionalSort interface {
	isGetCategoryCollectionRequest_OptionalSort()
}

type GetCategoryCollectionRequest_Sort struct {
	Sort string `protobuf:"bytes,4,opt,name=sort,proto3,oneof"`
}

func (*GetCategoryCollectionRequest_Sort) isGetCategoryCollectionRequest_OptionalSort() {}

type GetCategoryCollectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*Category `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Meta *Meta       `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *GetCategoryCollectionResponse) Reset() {
	*x = GetCategoryCollectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCategoryCollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCategoryCollectionResponse) ProtoMessage() {}

func (x *GetCategoryCollectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCategoryCollectionResponse.ProtoReflect.Descriptor instead.
func (*GetCategoryCollectionResponse) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{53}
}

func (x *GetCategoryCollectionResponse) GetData() []*Category {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetCategoryCollectionResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

type GetCategoryItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Types that are assignable to OptionalFields:
	//
	//	*GetCategoryItemRequest_Fields
	OptionalFields isGetCategoryItemRequest_OptionalFields `protobuf_oneof:"optional_fields"`
}

func (x *GetCategoryItemRequest) Reset() {
	*x = GetCategoryItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCategoryItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCategoryItemRequest) ProtoMessage() {}

func (x *GetCategoryItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCategoryItemRequest.ProtoReflect.Descriptor instead.
func (*GetCategoryItemRequest) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{54}
}

func (x *GetCategoryItemRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (m *GetCategoryItemRequest) GetOptionalFields() isGetCategoryItemRequest_OptionalFields {
	if m != nil {
		return m.OptionalFields
	}
	return nil
}

func (x *GetCategoryItemRequest) GetFields() string {
	if x, ok := x.GetOptionalFields().(*GetCategoryItemRequest_Fields); ok {
		return x.Fields
	}
	return ""
}

type isGetCategoryItemRequest_OptionalFields interface {
	isGetCategoryItemRequest_OptionalFields()
}

type GetCategoryItemRequest_Fields struct {
	Fields string `protobuf:"bytes,2,opt,name=fields,proto3,oneof"`
}

func (*GetCategoryItemRequest_Fields) isGetCategoryItemRequest_OptionalFields() {}

type GetCategoryItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *Category `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Meta *Meta     `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *GetCategoryItemResponse) Reset() {
	*x = GetCategoryItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCategoryItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCategoryItemResponse) ProtoMessage() {}

func (x *GetCategoryItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCategoryItemResponse.ProtoReflect.Descriptor instead.
func (*GetCategoryItemResponse) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{55}
}

func (x *GetCategoryItemResponse) GetData() *Category {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetCategoryItemResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

type CreateCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CreateCategoryRequest) Reset() {
	*x = CreateCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCategoryRequest) ProtoMessage() {}

func (x *CreateCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCategoryRequest.ProtoReflect.Descriptor instead.
func (*CreateCategoryRequest) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{56}
}

func (x *CreateCategoryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CreateCategoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateCategoryResponse) Reset() {
	*x = CreateCategoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCategoryResponse) ProtoMessage() {}

func (x *CreateCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCategoryResponse.ProtoReflect.Descriptor instead.
func (*CreateCategoryResponse) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{57}
}

type UpdateCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *UpdateCategoryRequest) Reset() {
	*x = UpdateCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCategoryRequest) ProtoMessage() {}

func (x *UpdateCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCategoryRequest.ProtoReflect.Descriptor instead.
func (*UpdateCategoryRequest) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{58}
}

func (x *UpdateCategoryRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *UpdateCategoryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UpdateCategoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateCategoryResponse) Reset() {
	*x = UpdateCategoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCategoryResponse) ProtoMessage() {}

func (x *UpdateCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCategoryResponse.ProtoReflect.Descriptor instead.
func (*UpdateCategoryResponse) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{59}
}

type DeleteCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *DeleteCategoryRequest) Reset() {
	*x = DeleteCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCategoryRequest) ProtoMessage() {}

func (x *DeleteCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCategoryRequest.ProtoReflect.Descriptor instead.
func (*DeleteCategoryRequest) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{60}
}

func (x *DeleteCategoryRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type DeleteCategoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteCategoryResponse) Reset() {
	*x = DeleteCategoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecooda_v1_ecooda_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCategoryResponse) ProtoMessage() {}

func (x *DeleteCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ecooda_v1_ecooda_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCategoryResponse.ProtoReflect.Descriptor instead.
func (*DeleteCategoryResponse) Descriptor() ([]byte, []int) {
	return file_ecooda_v1_ecooda_proto_rawDescGZIP(), []int{61}
}

var File_ecooda_v1_ecooda_proto protoreflect.FileDescriptor

var file_ecooda_v1_ecooda_proto_rawDesc = []byte{
	0x0a, 0x16, 0x65, 0x63, 0x6f, 0x6f, 0x64, 0x61, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x63, 0x6f, 0x6f,
	0x64, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x65, 0x63, 0x6f, 0x6f, 0x64, 0x61,
	0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x68, 0x0a, 0x06, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70,
	0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x6e, 0x65, 0x78, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x73, 0x0a, 0x04, 0x4d,
	0x65, 0x74, 0x61, 0x12, 0x2b, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x65, 0x63, 0x6f, 0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72,
	0x12, 0x18, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x01, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x42, 0x11, 0x0a, 0x0f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x42, 0x11, 0x0a,
	0x0f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x22, 0x32, 0x0a, 0x07, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x27, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x63, 0x6f, 0x6f,
	0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x89, 0x02, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x65, 0x63, 0x6f, 0x6f,
	0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x48, 0x01, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x12, 0x2e, 0x0a, 0x07, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x63,
	0x6f, 0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x48,
	0x02, 0x52, 0x07, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x0f, 0x0a, 0x0d, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x12, 0x0a, 0x10,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73,
	0x22, 0x34, 0x0a, 0x09, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x27, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x63,
	0x6f, 0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x62, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a,
	0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x42, 0x11, 0x0a, 0x0f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x4b, 0x0a, 0x20, 0x47, 0x65,
	0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x68, 0x61,
	0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65,
	0x63, 0x6f, 0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xce, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x12, 0x1d, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x14, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x02, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x11, 0x0a,
	0x0f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x42, 0x14, 0x0a, 0x12, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x22, 0x6d, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x63, 0x6f, 0x6f, 0x64, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x23, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x65, 0x63, 0x6f, 0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74,
	0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x22, 0x59, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x42,
	0x11, 0x0a, 0x0f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x22, 0x67, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x63,
	0x6f, 0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x65, 0x63, 0x6f, 0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x22, 0x79, 0x0a, 0x15, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x65, 0x63, 0x6f, 0x6f, 0x64, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x6c, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x17, 0x2e, 0x65, 0x63, 0x6f, 0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x18,
	0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x18, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x56, 0x0a, 0x1b, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x54, 0x6f, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x55, 0x75, 0x69, 0x64, 0x22, 0x1e, 0x0a, 0x1c, 0x41, 0x64, 0x64, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x54, 0x6f, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x55, 0x0a, 0x1a, 0x41, 0x64, 0x64, 0x52, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x75, 0x69, 0x64, 0x22, 0x1d,
	0x0a, 0x1b, 0x41, 0x64, 0x64, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5b, 0x0a,
	0x20, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x46, 0x72,
	0x6f, 0x6d, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x75, 0x69, 0x64, 0x22, 0x23, 0x0a, 0x21, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x46, 0x72, 0x6f, 0x6d, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x5a, 0x0a, 0x1f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x46,
	0x72, 0x6f, 0x6d, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x75, 0x69, 0x64, 0x22, 0x22, 0x0a, 0x20, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x5a, 0x0a, 0x1d, 0x41, 0x64, 0x64, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x54,
	0x6f, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67,
	0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x55, 0x75, 0x69, 0x64, 0x22, 0x20, 0x0a, 0x1e, 0x41,
	0x64, 0x64, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x54, 0x6f, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5f, 0x0a,
	0x22, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65,
	0x46, 0x72, 0x6f, 0x6d, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x6c, 0x6c,
	0x65, 0x6e, 0x67, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x55, 0x75, 0x69, 0x64, 0x22, 0x25,
	0x0a, 0x23, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67,
	0x65, 0x46, 0x72, 0x6f, 0x6d, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xe6, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61,
	0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x18,
	0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x42, 0x11, 0x0a, 0x0f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x42, 0x14, 0x0a, 0x12, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x42, 0x0f, 0x0a, 0x0d,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x42, 0x0f, 0x0a,
	0x0d, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x22, 0x72,
	0x0a, 0x21, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x73, 0x46,
	0x72, 0x6f, 0x6d, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x65, 0x63, 0x6f, 0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a,
	0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x65, 0x63,
	0x6f, 0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65,
	0x74, 0x61, 0x22, 0x63, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x06, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x42, 0x11, 0x0a, 0x0f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x71, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x68, 0x61, 0x6c, 0x6c,
	0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x63, 0x6f,
	0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x65, 0x63, 0x6f, 0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x22, 0x85, 0x01, 0x0a, 0x08, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x42, 0x0f, 0x0a, 0x0d, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x35, 0x0a, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x12, 0x27, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x65, 0x63, 0x6f, 0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x8d, 0x05, 0x0a, 0x09, 0x43, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x22, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x12,
	0x1c, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x03, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a,
	0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x48,
	0x04, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x09, 0x6c,
	0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x48, 0x05,
	0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x09, 0x74,
	0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06,
	0x52, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x07, 0x67,
	0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x07,
	0x67, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x12, 0x37, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x63,
	0x6f, 0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69,
	0x65, 0x73, 0x48, 0x08, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x12, 0x34, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x63, 0x6f, 0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x0f, 0x0a, 0x0d, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x16, 0x0a, 0x14, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x11, 0x0a, 0x0f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x72, 0x65,
	0x65, 0x74, 0x42, 0x13, 0x0a, 0x11, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x70,
	0x6f, 0x73, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x13, 0x0a, 0x11, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x5f, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x42, 0x14, 0x0a, 0x12,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x42, 0x14, 0x0a, 0x12, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x74,
	0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x42, 0x12, 0x0a, 0x10, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x67, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x42, 0x15, 0x0a, 0x13,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x69, 0x65, 0x73, 0x42, 0x14, 0x0a, 0x12, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xcf, 0x01, 0x0a, 0x1d, 0x47, 0x65,
	0x74, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x06, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x02, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x04, 0x73, 0x6f,
	0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x42, 0x11, 0x0a, 0x0f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x42, 0x14, 0x0a, 0x12, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x22, 0x6f, 0x0a, 0x1e, 0x47,
	0x65, 0x74, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x63,
	0x6f, 0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67,
	0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x65, 0x63, 0x6f, 0x6f, 0x64, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x22, 0x5a, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x06, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x42, 0x11, 0x0a, 0x0f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x69, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43,
	0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x63, 0x6f, 0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23,
	0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x65,
	0x63, 0x6f, 0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d,
	0x65, 0x74, 0x61, 0x22, 0xe5, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6c, 0x6c,
	0x65, 0x6e, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x75, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x75, 0x75, 0x69, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x06, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x02, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x04, 0x73, 0x6f,
	0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x42, 0x11, 0x0a, 0x0f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x42, 0x14, 0x0a, 0x12, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x22, 0x6f, 0x0a, 0x1e, 0x47,
	0x65, 0x74, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x63,
	0x6f, 0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67,
	0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x65, 0x63, 0x6f, 0x6f, 0x64, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x22, 0xf4, 0x01, 0x0a,
	0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x72, 0x65, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x61, 0x6c,
	0x6c, 0x65, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x61, 0x6c, 0x6c,
	0x65, 0x72, 0x79, 0x22, 0x19, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61,
	0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x88,
	0x02, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x6f, 0x73, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x6f, 0x73, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x12,
	0x18, 0x0a, 0x07, 0x67, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x67, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x22, 0x19, 0x0a, 0x17, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2c, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x22, 0x19, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6c,
	0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x58, 0x0a,
	0x1d, 0x41, 0x64, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x6f, 0x43, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x55, 0x75, 0x69, 0x64, 0x22, 0x20, 0x0a, 0x1e, 0x41, 0x64, 0x64, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x6f, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5d, 0x0a, 0x22, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x46, 0x72, 0x6f, 0x6d, 0x43,
	0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x55, 0x75, 0x69, 0x64, 0x22, 0x25, 0x0a, 0x23, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0xce, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x14, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x11, 0x0a, 0x0f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x42, 0x14, 0x0a, 0x12, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x42, 0x0f,
	0x0a, 0x0d, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x42,
	0x0f, 0x0a, 0x0d, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x6f, 0x72, 0x74,
	0x22, 0x6d, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x27, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x65, 0x63, 0x6f, 0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x04, 0x6d, 0x65,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x65, 0x63, 0x6f, 0x6f, 0x64,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x22,
	0x59, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a,
	0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x42, 0x11, 0x0a, 0x0f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x67, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x63, 0x6f, 0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23,
	0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x65,
	0x63, 0x6f, 0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d,
	0x65, 0x74, 0x61, 0x22, 0x2b, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x18, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3f, 0x0a, 0x15, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x22, 0x18, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x97, 0x01, 0x0a,
	0x0c, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a,
	0x19, 0x4c, 0x4f, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17,
	0x4c, 0x4f, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4f,
	0x4e, 0x54, 0x49, 0x4e, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x4c, 0x4f, 0x43,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54,
	0x52, 0x59, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x4c, 0x4f, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x4f, 0x4e, 0x10, 0x03, 0x12, 0x16,
	0x0a, 0x12, 0x4c, 0x4f, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x43, 0x49, 0x54, 0x59, 0x10, 0x04, 0x32, 0xa7, 0x0e, 0x0a, 0x0f, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x75, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x68, 0x61,
	0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x2a, 0x2e, 0x65, 0x63, 0x6f, 0x6f, 0x64, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72,
	0x6f, 0x6d, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x65, 0x63, 0x6f, 0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x7e, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x2e, 0x65, 0x63, 0x6f,
	0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x65, 0x63, 0x6f, 0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x12, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x12, 0x0a, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x73, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x21, 0x2e, 0x65, 0x63, 0x6f, 0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x65, 0x63, 0x6f, 0x6f, 0x64, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x7b, 0x75, 0x75, 0x69, 0x64, 0x7d, 0x12, 0x6c, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x2e, 0x65, 0x63, 0x6f, 0x6f, 0x64,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x65, 0x63, 0x6f,
	0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x3a, 0x01, 0x2a, 0x22, 0x0a, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x73, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x2e, 0x65, 0x63, 0x6f, 0x6f, 0x64, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x65, 0x63, 0x6f, 0x6f, 0x64,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x16, 0x3a, 0x01, 0x2a, 0x1a, 0x11, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x7b, 0x75, 0x75, 0x69, 0x64, 0x7d, 0x12, 0x70, 0x0a, 0x0e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x2e, 0x65, 0x63,
	0x6f, 0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x65, 0x63, 0x6f, 0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x2a, 0x11, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x75, 0x75, 0x69, 0x64, 0x7d, 0x12, 0x91, 0x01, 0x0a, 0x14,
	0x41, 0x64, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x54, 0x6f, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x2e, 0x65, 0x63, 0x6f, 0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x54, 0x6f, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x65,
	0x63, 0x6f, 0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x54, 0x6f, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x3a, 0x01, 0x2a,
	0x22, 0x1d, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x75, 0x75,
	0x69, 0x64, 0x7d, 0x2f, 0x61, 0x64, 0x64, 0x2d, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x8d, 0x01, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x2e, 0x65, 0x63, 0x6f, 0x6f, 0x64, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26,
	0x2e, 0x65, 0x63, 0x6f, 0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x3a, 0x01,
	0x2a, 0x22, 0x1c, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x75,
	0x75, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x64, 0x64, 0x2d, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12,
	0xa3, 0x01, 0x0a, 0x19, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x46, 0x72, 0x6f, 0x6d, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x2e,
	0x65, 0x63, 0x6f, 0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x46, 0x72, 0x6f, 0x6d, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x65, 0x63, 0x6f,
	0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x46, 0x72, 0x6f, 0x6d, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25,
	0x3a, 0x01, 0x2a, 0x22, 0x20, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x7b, 0x75, 0x75, 0x69, 0x64, 0x7d, 0x2f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x2d, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x9f, 0x01, 0x0a, 0x18, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x2a, 0x2e, 0x65, 0x63, 0x6f, 0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b,
	0x2e, 0x65, 0x63, 0x6f, 0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x24, 0x3a, 0x01, 0x2a, 0x22, 0x1f, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x7b, 0x75, 0x75, 0x69, 0x64, 0x7d, 0x2f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x2d, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x99, 0x01, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x43,
	0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x54, 0x6f, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x28, 0x2e, 0x65, 0x63, 0x6f, 0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x64, 0x64, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x54, 0x6f, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x65,
	0x63, 0x6f, 0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x68, 0x61, 0x6c,
	0x6c, 0x65, 0x6e, 0x67, 0x65, 0x54, 0x6f, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x3a,
	0x01, 0x2a, 0x22, 0x1f, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b,
	0x75, 0x75, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x64, 0x64, 0x2d, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65,
	0x6e, 0x67, 0x65, 0x12, 0xab, 0x01, 0x0a, 0x1b, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x2e, 0x65, 0x63, 0x6f, 0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x46,
	0x72, 0x6f, 0x6d, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x65, 0x63, 0x6f, 0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x46, 0x72,
	0x6f, 0x6d, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x3a, 0x01, 0x2a, 0x22, 0x22, 0x2f,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x75, 0x75, 0x69, 0x64, 0x7d,
	0x2f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x2d, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67,
	0x65, 0x12, 0x9c, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e,
	0x67, 0x65, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2b, 0x2e, 0x65, 0x63, 0x6f, 0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x65,
	0x63, 0x6f, 0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6c,
	0x6c, 0x65, 0x6e, 0x67, 0x65, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1e, 0x12, 0x1c, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b,
	0x75, 0x75, 0x69, 0x64, 0x7d, 0x2f, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x73,
	0x32, 0xfb, 0x0c, 0x0a, 0x10, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6f, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6c,
	0x6c, 0x65, 0x6e, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12,
	0x28, 0x2e, 0x65, 0x63, 0x6f, 0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x65, 0x63, 0x6f, 0x6f,
	0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e,
	0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x82, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x28, 0x2e, 0x65, 0x63, 0x6f, 0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x65, 0x63,
	0x6f, 0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6c, 0x6c,
	0x65, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x12, 0x0b,
	0x2f, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x77, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x22, 0x2e, 0x65, 0x63, 0x6f, 0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x65, 0x63, 0x6f, 0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14,
	0x12, 0x12, 0x2f, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x73, 0x2f, 0x7b, 0x75,
	0x75, 0x69, 0x64, 0x7d, 0x12, 0x70, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x21, 0x2e, 0x65, 0x63, 0x6f, 0x6f, 0x64, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65,
	0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x65, 0x63, 0x6f,
	0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61,
	0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x3a, 0x01, 0x2a, 0x22, 0x0b, 0x2f, 0x63, 0x68, 0x61, 0x6c,
	0x6c, 0x65, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x77, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x21, 0x2e, 0x65, 0x63, 0x6f, 0x6f,
	0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6c,
	0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x65,
	0x63, 0x6f, 0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x3a, 0x01, 0x2a, 0x1a, 0x12, 0x2f, 0x63, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x73, 0x2f, 0x7b, 0x75, 0x75, 0x69, 0x64, 0x7d, 0x12,
	0x74, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e,
	0x67, 0x65, 0x12, 0x21, 0x2e, 0x65, 0x63, 0x6f, 0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x65, 0x63, 0x6f, 0x6f, 0x64, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x14, 0x2a, 0x12, 0x2f, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x73, 0x2f, 0x7b,
	0x75, 0x75, 0x69, 0x64, 0x7d, 0x12, 0x99, 0x01, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x6f, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65,
	0x12, 0x28, 0x2e, 0x65, 0x63, 0x6f, 0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x6f, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65,
	0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x65, 0x63, 0x6f,
	0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x54, 0x6f, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x3a, 0x01, 0x2a,
	0x22, 0x1f, 0x2f, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x73, 0x2f, 0x7b, 0x75,
	0x75, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x64, 0x64, 0x2d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x12, 0xab, 0x01, 0x0a, 0x1b, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67,
	0x65, 0x12, 0x2d, 0x2e, 0x65, 0x63, 0x6f, 0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x46, 0x72, 0x6f, 0x6d,
	0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2e, 0x2e, 0x65, 0x63, 0x6f, 0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x46, 0x72, 0x6f, 0x6d, 0x43,
	0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x3a, 0x01, 0x2a, 0x22, 0x22, 0x2f, 0x63, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x73, 0x2f, 0x7b, 0x75, 0x75, 0x69, 0x64, 0x7d, 0x2f,
	0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x2d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12,
	0x7f, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x2e, 0x65, 0x63, 0x6f, 0x6f, 0x64,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x28, 0x2e, 0x65, 0x63, 0x6f, 0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x0d, 0x12, 0x0b, 0x2f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x12, 0x74, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x21, 0x2e, 0x65, 0x63, 0x6f, 0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x65, 0x63, 0x6f, 0x6f, 0x64, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x14, 0x12, 0x12, 0x2f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x2f,
	0x7b, 0x75, 0x75, 0x69, 0x64, 0x7d, 0x12, 0x6d, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x20, 0x2e, 0x65, 0x63, 0x6f, 0x6f, 0x64,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x65, 0x63, 0x6f,
	0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x10, 0x3a, 0x01, 0x2a, 0x22, 0x0b, 0x2f, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x74, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x20, 0x2e, 0x65, 0x63, 0x6f, 0x6f, 0x64, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x65, 0x63, 0x6f, 0x6f,
	0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x17, 0x3a, 0x01, 0x2a, 0x1a, 0x12, 0x2f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x69, 0x65, 0x73, 0x2f, 0x7b, 0x75, 0x75, 0x69, 0x64, 0x7d, 0x12, 0x71, 0x0a, 0x0e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x20, 0x2e,
	0x65, 0x63, 0x6f, 0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x65, 0x63, 0x6f, 0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x2a, 0x12, 0x2f, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x2f, 0x7b, 0x75, 0x75, 0x69, 0x64, 0x7d, 0x42, 0x95,
	0x01, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x63, 0x6f, 0x6f, 0x64, 0x61, 0x2e, 0x76, 0x31,
	0x42, 0x0b, 0x45, 0x63, 0x6f, 0x6f, 0x64, 0x61, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x75, 0x69, 0x66,
	0x72, 0x6f, 0x64, 0x72, 0x69, 0x67, 0x75, 0x65, 0x73, 0x2f, 0x65, 0x63, 0x6f, 0x6f, 0x64, 0x61,
	0x2f, 0x73, 0x74, 0x75, 0x62, 0x73, 0x2f, 0x67, 0x6f, 0x2f, 0x65, 0x63, 0x6f, 0x6f, 0x64, 0x61,
	0x2f, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x45, 0x58, 0x58, 0xaa, 0x02, 0x09, 0x45, 0x63, 0x6f, 0x6f,
	0x64, 0x61, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x09, 0x45, 0x63, 0x6f, 0x6f, 0x64, 0x61, 0x5c, 0x56,
	0x31, 0xe2, 0x02, 0x15, 0x45, 0x63, 0x6f, 0x6f, 0x64, 0x61, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50,
	0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0a, 0x45, 0x63, 0x6f, 0x6f,
	0x64, 0x61, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ecooda_v1_ecooda_proto_rawDescOnce sync.Once
	file_ecooda_v1_ecooda_proto_rawDescData = file_ecooda_v1_ecooda_proto_rawDesc
)

func file_ecooda_v1_ecooda_proto_rawDescGZIP() []byte {
	file_ecooda_v1_ecooda_proto_rawDescOnce.Do(func() {
		file_ecooda_v1_ecooda_proto_rawDescData = protoimpl.X.CompressGZIP(file_ecooda_v1_ecooda_proto_rawDescData)
	})
	return file_ecooda_v1_ecooda_proto_rawDescData
}

var file_ecooda_v1_ecooda_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_ecooda_v1_ecooda_proto_msgTypes = make([]protoimpl.MessageInfo, 62)
var file_ecooda_v1_ecooda_proto_goTypes = []interface{}{
	(LocationType)(0),                           // 0: ecooda.v1.LocationType
	(*Cursor)(nil),                              // 1: ecooda.v1.Cursor
	(*Meta)(nil),                                // 2: ecooda.v1.Meta
	(*Parents)(nil),                             // 3: ecooda.v1.Parents
	(*Location)(nil),                            // 4: ecooda.v1.Location
	(*Locations)(nil),                           // 5: ecooda.v1.Locations
	(*GetLocationFromChallengeRequest)(nil),     // 6: ecooda.v1.GetLocationFromChallengeRequest
	(*GetLocationFromChallengeResponse)(nil),    // 7: ecooda.v1.GetLocationFromChallengeResponse
	(*GetLocationCollectionRequest)(nil),        // 8: ecooda.v1.GetLocationCollectionRequest
	(*GetLocationCollectionResponse)(nil),       // 9: ecooda.v1.GetLocationCollectionResponse
	(*GetLocationItemRequest)(nil),              // 10: ecooda.v1.GetLocationItemRequest
	(*GetLocationItemResponse)(nil),             // 11: ecooda.v1.GetLocationItemResponse
	(*CreateLocationRequest)(nil),               // 12: ecooda.v1.CreateLocationRequest
	(*CreateLocationResponse)(nil),              // 13: ecooda.v1.CreateLocationResponse
	(*UpdateLocationRequest)(nil),               // 14: ecooda.v1.UpdateLocationRequest
	(*UpdateLocationResponse)(nil),              // 15: ecooda.v1.UpdateLocationResponse
	(*DeleteLocationRequest)(nil),               // 16: ecooda.v1.DeleteLocationRequest
	(*DeleteLocationResponse)(nil),              // 17: ecooda.v1.DeleteLocationResponse
	(*AddCountryToLocationRequest)(nil),         // 18: ecooda.v1.AddCountryToLocationRequest
	(*AddCountryToLocationResponse)(nil),        // 19: ecooda.v1.AddCountryToLocationResponse
	(*AddRegionToLocationRequest)(nil),          // 20: ecooda.v1.AddRegionToLocationRequest
	(*AddRegionToLocationResponse)(nil),         // 21: ecooda.v1.AddRegionToLocationResponse
	(*RemoveCountryFromLocationRequest)(nil),    // 22: ecooda.v1.RemoveCountryFromLocationRequest
	(*RemoveCountryFromLocationResponse)(nil),   // 23: ecooda.v1.RemoveCountryFromLocationResponse
	(*RemoveRegionFromLocationRequest)(nil),     // 24: ecooda.v1.RemoveRegionFromLocationRequest
	(*RemoveRegionFromLocationResponse)(nil),    // 25: ecooda.v1.RemoveRegionFromLocationResponse
	(*AddChallengeToLocationRequest)(nil),       // 26: ecooda.v1.AddChallengeToLocationRequest
	(*AddChallengeToLocationResponse)(nil),      // 27: ecooda.v1.AddChallengeToLocationResponse
	(*RemoveChallengeFromLocationRequest)(nil),  // 28: ecooda.v1.RemoveChallengeFromLocationRequest
	(*RemoveChallengeFromLocationResponse)(nil), // 29: ecooda.v1.RemoveChallengeFromLocationResponse
	(*GetChallengesFromLocationRequest)(nil),    // 30: ecooda.v1.GetChallengesFromLocationRequest
	(*GetChallengesFromLocationResponse)(nil),   // 31: ecooda.v1.GetChallengesFromLocationResponse
	(*GetLocationsFromChallengeRequest)(nil),    // 32: ecooda.v1.GetLocationsFromChallengeRequest
	(*GetLocationsFromChallengeResponse)(nil),   // 33: ecooda.v1.GetLocationsFromChallengeResponse
	(*Category)(nil),                            // 34: ecooda.v1.Category
	(*Categories)(nil),                          // 35: ecooda.v1.Categories
	(*Challenge)(nil),                           // 36: ecooda.v1.Challenge
	(*GetChallengeCollectionRequest)(nil),       // 37: ecooda.v1.GetChallengeCollectionRequest
	(*GetChallengeCollectionResponse)(nil),      // 38: ecooda.v1.GetChallengeCollectionResponse
	(*GetChallengeItemRequest)(nil),             // 39: ecooda.v1.GetChallengeItemRequest
	(*GetChallengeItemResponse)(nil),            // 40: ecooda.v1.GetChallengeItemResponse
	(*GetChallengeItemsBatchRequest)(nil),       // 41: ecooda.v1.GetChallengeItemsBatchRequest
	(*GetChallengeItemsBatchResponse)(nil),      // 42: ecooda.v1.GetChallengeItemsBatchResponse
	(*CreateChallengeRequest)(nil),              // 43: ecooda.v1.CreateChallengeRequest
	(*CreateChallengeResponse)(nil),             // 44: ecooda.v1.CreateChallengeResponse
	(*UpdateChallengeRequest)(nil),              // 45: ecooda.v1.UpdateChallengeRequest
	(*UpdateChallengeResponse)(nil),             // 46: ecooda.v1.UpdateChallengeResponse
	(*DeleteChallengeRequest)(nil),              // 47: ecooda.v1.DeleteChallengeRequest
	(*DeleteChallengeResponse)(nil),             // 48: ecooda.v1.DeleteChallengeResponse
	(*AddCategoryToChallengeRequest)(nil),       // 49: ecooda.v1.AddCategoryToChallengeRequest
	(*AddCategoryToChallengeResponse)(nil),      // 50: ecooda.v1.AddCategoryToChallengeResponse
	(*RemoveCategoryFromChallengeRequest)(nil),  // 51: ecooda.v1.RemoveCategoryFromChallengeRequest
	(*RemoveCategoryFromChallengeResponse)(nil), // 52: ecooda.v1.RemoveCategoryFromChallengeResponse
	(*GetCategoryCollectionRequest)(nil),        // 53: ecooda.v1.GetCategoryCollectionRequest
	(*GetCategoryCollectionResponse)(nil),       // 54: ecooda.v1.GetCategoryCollectionResponse
	(*GetCategoryItemRequest)(nil),              // 55: ecooda.v1.GetCategoryItemRequest
	(*GetCategoryItemResponse)(nil),             // 56: ecooda.v1.GetCategoryItemResponse
	(*CreateCategoryRequest)(nil),               // 57: ecooda.v1.CreateCategoryRequest
	(*CreateCategoryResponse)(nil),              // 58: ecooda.v1.CreateCategoryResponse
	(*UpdateCategoryRequest)(nil),               // 59: ecooda.v1.UpdateCategoryRequest
	(*UpdateCategoryResponse)(nil),              // 60: ecooda.v1.UpdateCategoryResponse
	(*DeleteCategoryRequest)(nil),               // 61: ecooda.v1.DeleteCategoryRequest
	(*DeleteCategoryResponse)(nil),              // 62: ecooda.v1.DeleteCategoryResponse
}
var file_ecooda_v1_ecooda_proto_depIdxs = []int32{
	1,  // 0: ecooda.v1.Meta.cursor:type_name -> ecooda.v1.Cursor
	4,  // 1: ecooda.v1.Parents.data:type_name -> ecooda.v1.Location
	0,  // 2: ecooda.v1.Location.type:type_name -> ecooda.v1.LocationType
	3,  // 3: ecooda.v1.Location.parents:type_name -> ecooda.v1.Parents
	4,  // 4: ecooda.v1.Locations.data:type_name -> ecooda.v1.Location
	4,  // 5: ecooda.v1.GetLocationFromChallengeResponse.data:type_name -> ecooda.v1.Location
	4,  // 6: ecooda.v1.GetLocationCollectionResponse.data:type_name -> ecooda.v1.Location
	2,  // 7: ecooda.v1.GetLocationCollectionResponse.meta:type_name -> ecooda.v1.Meta
	4,  // 8: ecooda.v1.GetLocationItemResponse.data:type_name -> ecooda.v1.Location
	2,  // 9: ecooda.v1.GetLocationItemResponse.meta:type_name -> ecooda.v1.Meta
	0,  // 10: ecooda.v1.CreateLocationRequest.type:type_name -> ecooda.v1.LocationType
	0,  // 11: ecooda.v1.UpdateLocationRequest.type:type_name -> ecooda.v1.LocationType
	36, // 12: ecooda.v1.GetChallengesFromLocationResponse.data:type_name -> ecooda.v1.Challenge
	2,  // 13: ecooda.v1.GetChallengesFromLocationResponse.meta:type_name -> ecooda.v1.Meta
	4,  // 14: ecooda.v1.GetLocationsFromChallengeResponse.data:type_name -> ecooda.v1.Location
	2,  // 15: ecooda.v1.GetLocationsFromChallengeResponse.meta:type_name -> ecooda.v1.Meta
	34, // 16: ecooda.v1.Categories.data:type_name -> ecooda.v1.Category
	35, // 17: ecooda.v1.Challenge.categories:type_name -> ecooda.v1.Categories
	5,  // 18: ecooda.v1.Challenge.locations:type_name -> ecooda.v1.Locations
	36, // 19: ecooda.v1.GetChallengeCollectionResponse.data:type_name -> ecooda.v1.Challenge
	2,  // 20: ecooda.v1.GetChallengeCollectionResponse.meta:type_name -> ecooda.v1.Meta
	36, // 21: ecooda.v1.GetChallengeItemResponse.data:type_name -> ecooda.v1.Challenge
	2,  // 22: ecooda.v1.GetChallengeItemResponse.meta:type_name -> ecooda.v1.Meta
	36, // 23: ecooda.v1.GetChallengeItemsBatchResponse.data:type_name -> ecooda.v1.Challenge
	2,  // 24: ecooda.v1.GetChallengeItemsBatchResponse.meta:type_name -> ecooda.v1.Meta
	34, // 25: ecooda.v1.GetCategoryCollectionResponse.data:type_name -> ecooda.v1.Category
	2,  // 26: ecooda.v1.GetCategoryCollectionResponse.meta:type_name -> ecooda.v1.Meta
	34, // 27: ecooda.v1.GetCategoryItemResponse.data:type_name -> ecooda.v1.Category
	2,  // 28: ecooda.v1.GetCategoryItemResponse.meta:type_name -> ecooda.v1.Meta
	6,  // 29: ecooda.v1.LocationService.GetLocationFromChallenge:input_type -> ecooda.v1.GetLocationFromChallengeRequest
	8,  // 30: ecooda.v1.LocationService.GetLocationCollection:input_type -> ecooda.v1.GetLocationCollectionRequest
	10, // 31: ecooda.v1.LocationService.GetLocationItem:input_type -> ecooda.v1.GetLocationItemRequest
	12, // 32: ecooda.v1.LocationService.CreateLocation:input_type -> ecooda.v1.CreateLocationRequest
	14, // 33: ecooda.v1.LocationService.UpdateLocation:input_type -> ecooda.v1.UpdateLocationRequest
	16, // 34: ecooda.v1.LocationService.DeleteLocation:input_type -> ecooda.v1.DeleteLocationRequest
	18, // 35: ecooda.v1.LocationService.AddCountryToLocation:input_type -> ecooda.v1.AddCountryToLocationRequest
	20, // 36: ecooda.v1.LocationService.AddRegionToLocation:input_type -> ecooda.v1.AddRegionToLocationRequest
	22, // 37: ecooda.v1.LocationService.RemoveCountryFromLocation:input_type -> ecooda.v1.RemoveCountryFromLocationRequest
	24, // 38: ecooda.v1.LocationService.RemoveRegionFromLocation:input_type -> ecooda.v1.RemoveRegionFromLocationRequest
	26, // 39: ecooda.v1.LocationService.AddChallengeToLocation:input_type -> ecooda.v1.AddChallengeToLocationRequest
	28, // 40: ecooda.v1.LocationService.RemoveChallengeFromLocation:input_type -> ecooda.v1.RemoveChallengeFromLocationRequest
	30, // 41: ecooda.v1.LocationService.GetChallengesFromLocation:input_type -> ecooda.v1.GetChallengesFromLocationRequest
	41, // 42: ecooda.v1.ChallengeService.GetChallengeItemsBatch:input_type -> ecooda.v1.GetChallengeItemsBatchRequest
	37, // 43: ecooda.v1.ChallengeService.GetChallengeCollection:input_type -> ecooda.v1.GetChallengeCollectionRequest
	39, // 44: ecooda.v1.ChallengeService.GetChallengeItem:input_type -> ecooda.v1.GetChallengeItemRequest
	43, // 45: ecooda.v1.ChallengeService.CreateChallenge:input_type -> ecooda.v1.CreateChallengeRequest
	45, // 46: ecooda.v1.ChallengeService.UpdateChallenge:input_type -> ecooda.v1.UpdateChallengeRequest
	47, // 47: ecooda.v1.ChallengeService.DeleteChallenge:input_type -> ecooda.v1.DeleteChallengeRequest
	49, // 48: ecooda.v1.ChallengeService.AddCategoryToChallenge:input_type -> ecooda.v1.AddCategoryToChallengeRequest
	51, // 49: ecooda.v1.ChallengeService.RemoveCategoryFromChallenge:input_type -> ecooda.v1.RemoveCategoryFromChallengeRequest
	53, // 50: ecooda.v1.ChallengeService.GetCategoryCollection:input_type -> ecooda.v1.GetCategoryCollectionRequest
	55, // 51: ecooda.v1.ChallengeService.GetCategoryItem:input_type -> ecooda.v1.GetCategoryItemRequest
	57, // 52: ecooda.v1.ChallengeService.CreateCategory:input_type -> ecooda.v1.CreateCategoryRequest
	59, // 53: ecooda.v1.ChallengeService.UpdateCategory:input_type -> ecooda.v1.UpdateCategoryRequest
	61, // 54: ecooda.v1.ChallengeService.DeleteCategory:input_type -> ecooda.v1.DeleteCategoryRequest
	7,  // 55: ecooda.v1.LocationService.GetLocationFromChallenge:output_type -> ecooda.v1.GetLocationFromChallengeResponse
	9,  // 56: ecooda.v1.LocationService.GetLocationCollection:output_type -> ecooda.v1.GetLocationCollectionResponse
	11, // 57: ecooda.v1.LocationService.GetLocationItem:output_type -> ecooda.v1.GetLocationItemResponse
	13, // 58: ecooda.v1.LocationService.CreateLocation:output_type -> ecooda.v1.CreateLocationResponse
	15, // 59: ecooda.v1.LocationService.UpdateLocation:output_type -> ecooda.v1.UpdateLocationResponse
	17, // 60: ecooda.v1.LocationService.DeleteLocation:output_type -> ecooda.v1.DeleteLocationResponse
	19, // 61: ecooda.v1.LocationService.AddCountryToLocation:output_type -> ecooda.v1.AddCountryToLocationResponse
	21, // 62: ecooda.v1.LocationService.AddRegionToLocation:output_type -> ecooda.v1.AddRegionToLocationResponse
	23, // 63: ecooda.v1.LocationService.RemoveCountryFromLocation:output_type -> ecooda.v1.RemoveCountryFromLocationResponse
	25, // 64: ecooda.v1.LocationService.RemoveRegionFromLocation:output_type -> ecooda.v1.RemoveRegionFromLocationResponse
	27, // 65: ecooda.v1.LocationService.AddChallengeToLocation:output_type -> ecooda.v1.AddChallengeToLocationResponse
	29, // 66: ecooda.v1.LocationService.RemoveChallengeFromLocation:output_type -> ecooda.v1.RemoveChallengeFromLocationResponse
	31, // 67: ecooda.v1.LocationService.GetChallengesFromLocation:output_type -> ecooda.v1.GetChallengesFromLocationResponse
	42, // 68: ecooda.v1.ChallengeService.GetChallengeItemsBatch:output_type -> ecooda.v1.GetChallengeItemsBatchResponse
	38, // 69: ecooda.v1.ChallengeService.GetChallengeCollection:output_type -> ecooda.v1.GetChallengeCollectionResponse
	40, // 70: ecooda.v1.ChallengeService.GetChallengeItem:output_type -> ecooda.v1.GetChallengeItemResponse
	44, // 71: ecooda.v1.ChallengeService.CreateChallenge:output_type -> ecooda.v1.CreateChallengeResponse
	46, // 72: ecooda.v1.ChallengeService.UpdateChallenge:output_type -> ecooda.v1.UpdateChallengeResponse
	48, // 73: ecooda.v1.ChallengeService.DeleteChallenge:output_type -> ecooda.v1.DeleteChallengeResponse
	50, // 74: ecooda.v1.ChallengeService.AddCategoryToChallenge:output_type -> ecooda.v1.AddCategoryToChallengeResponse
	52, // 75: ecooda.v1.ChallengeService.RemoveCategoryFromChallenge:output_type -> ecooda.v1.RemoveCategoryFromChallengeResponse
	54, // 76: ecooda.v1.ChallengeService.GetCategoryCollection:output_type -> ecooda.v1.GetCategoryCollectionResponse
	56, // 77: ecooda.v1.ChallengeService.GetCategoryItem:output_type -> ecooda.v1.GetCategoryItemResponse
	58, // 78: ecooda.v1.ChallengeService.CreateCategory:output_type -> ecooda.v1.CreateCategoryResponse
	60, // 79: ecooda.v1.ChallengeService.UpdateCategory:output_type -> ecooda.v1.UpdateCategoryResponse
	62, // 80: ecooda.v1.ChallengeService.DeleteCategory:output_type -> ecooda.v1.DeleteCategoryResponse
	55, // [55:81] is the sub-list for method output_type
	29, // [29:55] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_ecooda_v1_ecooda_proto_init() }
func file_ecooda_v1_ecooda_proto_init() {
	if File_ecooda_v1_ecooda_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ecooda_v1_ecooda_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cursor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Meta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Parents); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Location); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Locations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLocationFromChallengeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLocationFromChallengeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLocationCollectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLocationCollectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLocationItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLocationItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLocationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLocationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLocationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLocationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLocationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLocationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCountryToLocationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCountryToLocationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRegionToLocationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRegionToLocationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveCountryFromLocationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveCountryFromLocationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveRegionFromLocationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveRegionFromLocationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddChallengeToLocationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddChallengeToLocationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveChallengeFromLocationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveChallengeFromLocationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChallengesFromLocationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChallengesFromLocationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLocationsFromChallengeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLocationsFromChallengeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Category); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Categories); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Challenge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChallengeCollectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChallengeCollectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChallengeItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChallengeItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChallengeItemsBatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChallengeItemsBatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateChallengeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateChallengeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateChallengeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateChallengeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteChallengeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteChallengeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCategoryToChallengeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCategoryToChallengeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveCategoryFromChallengeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveCategoryFromChallengeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCategoryCollectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCategoryCollectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCategoryItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCategoryItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCategoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCategoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecooda_v1_ecooda_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCategoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_ecooda_v1_ecooda_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Meta_Cursor)(nil),
		(*Meta_Fields)(nil),
	}
	file_ecooda_v1_ecooda_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*Location_Name)(nil),
		(*Location_Type)(nil),
		(*Location_Parents)(nil),
	}
	file_ecooda_v1_ecooda_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*GetLocationFromChallengeRequest_Fields)(nil),
	}
	file_ecooda_v1_ecooda_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*GetLocationCollectionRequest_Fields)(nil),
		(*GetLocationCollectionRequest_PageSize)(nil),
		(*GetLocationCollectionRequest_Page)(nil),
		(*GetLocationCollectionRequest_Sort)(nil),
	}
	file_ecooda_v1_ecooda_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*GetLocationItemRequest_Fields)(nil),
	}
	file_ecooda_v1_ecooda_proto_msgTypes[29].OneofWrappers = []interface{}{
		(*GetChallengesFromLocationRequest_Fields)(nil),
		(*GetChallengesFromLocationRequest_PageSize)(nil),
		(*GetChallengesFromLocationRequest_Page)(nil),
		(*GetChallengesFromLocationRequest_Sort)(nil),
	}
	file_ecooda_v1_ecooda_proto_msgTypes[31].OneofWrappers = []interface{}{
		(*GetLocationsFromChallengeRequest_Fields)(nil),
	}
	file_ecooda_v1_ecooda_proto_msgTypes[33].OneofWrappers = []interface{}{
		(*Category_Name)(nil),
	}
	file_ecooda_v1_ecooda_proto_msgTypes[35].OneofWrappers = []interface{}{
		(*Challenge_Name)(nil),
		(*Challenge_Description)(nil),
		(*Challenge_Street)(nil),
		(*Challenge_Postcode)(nil),
		(*Challenge_Latitude)(nil),
		(*Challenge_Longitude)(nil),
		(*Challenge_Thumbnail)(nil),
		(*Challenge_Gallery)(nil),
		(*Challenge_Categories)(nil),
		(*Challenge_Locations)(nil),
	}
	file_ecooda_v1_ecooda_proto_msgTypes[36].OneofWrappers = []interface{}{
		(*GetChallengeCollectionRequest_Fields)(nil),
		(*GetChallengeCollectionRequest_PageSize)(nil),
		(*GetChallengeCollectionRequest_Page)(nil),
		(*GetChallengeCollectionRequest_Sort)(nil),
	}
	file_ecooda_v1_ecooda_proto_msgTypes[38].OneofWrappers = []interface{}{
		(*GetChallengeItemRequest_Fields)(nil),
	}
	file_ecooda_v1_ecooda_proto_msgTypes[40].OneofWrappers = []interface{}{
		(*GetChallengeItemsBatchRequest_Fields)(nil),
		(*GetChallengeItemsBatchRequest_PageSize)(nil),
		(*GetChallengeItemsBatchRequest_Page)(nil),
		(*GetChallengeItemsBatchRequest_Sort)(nil),
	}
	file_ecooda_v1_ecooda_proto_msgTypes[52].OneofWrappers = []interface{}{
		(*GetCategoryCollectionRequest_Fields)(nil),
		(*GetCategoryCollectionRequest_PageSize)(nil),
		(*GetCategoryCollectionRequest_Page)(nil),
		(*GetCategoryCollectionRequest_Sort)(nil),
	}
	file_ecooda_v1_ecooda_proto_msgTypes[54].OneofWrappers = []interface{}{
		(*GetCategoryItemRequest_Fields)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ecooda_v1_ecooda_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   62,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_ecooda_v1_ecooda_proto_goTypes,
		DependencyIndexes: file_ecooda_v1_ecooda_proto_depIdxs,
		EnumInfos:         file_ecooda_v1_ecooda_proto_enumTypes,
		MessageInfos:      file_ecooda_v1_ecooda_proto_msgTypes,
	}.Build()
	File_ecooda_v1_ecooda_proto = out.File
	file_ecooda_v1_ecooda_proto_rawDesc = nil
	file_ecooda_v1_ecooda_proto_goTypes = nil
	file_ecooda_v1_ecooda_proto_depIdxs = nil
}
